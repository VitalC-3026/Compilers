
;; Function main (main, funcdef_no=23, decl_uid=2444, cgraph_uid=23, symbol_order=23) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91 uninteresting
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,0 DREG:0,-150 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2392,20242 NO_REX_SSE_REGS:2392,20242 SSE_REGS:2392,20242 MMX_REGS:3142,25242 INT_SSE_REGS:2542,21242 ALL_REGS:46100,399700 MEM:599,7399
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1016,32466 NO_REX_SSE_REGS:1016,32466 SSE_REGS:1016,32466 MMX_REGS:1016,45216 INT_SSE_REGS:1016,35016 ALL_REGS:12700,719900 MEM:127,10327
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3000,9800 NO_REX_SSE_REGS:3000,9800 SSE_REGS:3000,9800 MMX_REGS:3750,14800 INT_SSE_REGS:3150,10800 ALL_REGS:46800,223600 MEM:1050,3600
  a3(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-150 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3150,3150 NO_REX_SSE_REGS:3150,3150 SSE_REGS:3150,3150 MMX_REGS:3900,3900 INT_SSE_REGS:3300,3300 ALL_REGS:62400,62400 MEM:1050,1050
  a4(r89,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17850,17850 NO_REX_SSE_REGS:17850,17850 SSE_REGS:17850,17850 MMX_REGS:22100,22100 INT_SSE_REGS:18700,18700 ALL_REGS:353600,353600 MEM:6800,6800
  a5(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31450,31450 NO_REX_SSE_REGS:31450,31450 SSE_REGS:31450,31450 MMX_REGS:44200,44200 INT_SSE_REGS:34000,34000 ALL_REGS:707200,707200 MEM:10200,10200
  a6(r91,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6800,6800 NO_REX_SSE_REGS:6800,6800 SSE_REGS:6800,6800 MMX_REGS:11050,11050 INT_SSE_REGS:7650,7650 ALL_REGS:176800,176800 MEM:2550,2550

   Insn 42(l0): point = 0
   Insn 39(l0): point = 3
   Insn 38(l0): point = 6
   Insn 37(l0): point = 8
   Insn 36(l0): point = 10
   Insn 31(l0): point = 12
   Insn 30(l0): point = 14
   Insn 29(l0): point = 16
   Insn 28(l0): point = 18
   Insn 27(l0): point = 20
   Insn 8(l0): point = 23
   Insn 55(l0): point = 26
   Insn 7(l0): point = 29
   Insn 6(l0): point = 31
   Insn 18(l0): point = 34
   Insn 17(l0): point = 36
   Insn 16(l0): point = 38
   Insn 15(l0): point = 40
   Insn 14(l0): point = 42
   Insn 13(l0): point = 44
   Insn 12(l0): point = 46
   Insn 11(l0): point = 48
   Insn 5(l0): point = 50
   Insn 24(l1): point = 53
   Insn 23(l1): point = 55
   Insn 21(l1): point = 57
   Insn 20(l1): point = 59
 a0(r89): [26..31] [21..23]
 a1(r90): [29..29]
 a2(r91): [29..38]
 a3(r93): [47..48]
 a4(r89): [53..61]
 a5(r90): [53..61]
 a6(r91): [53..61]
      Moving ranges of a6r91 to a2r91:  [53..61]
      Moving ranges of a5r90 to a1r90:  [53..61]
      Moving ranges of a4r89 to a0r89:  [53..61]
Compressing live ranges: from 62 to 9 - 14%
Ranges after the compression:
 a0(r89): [7..8] [0..4]
 a1(r90): [7..8] [3..3]
 a2(r91): [7..8] [3..4]
 a3(r93): [5..6]
+++Allocating 32 bytes for conflict table (uncompressed size 56)
;; a0(r89,l0) conflicts: a1(r90,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r90,l0) conflicts: a0(r89,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r89,l0) a1(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r93,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a3(r93)<-hr4@225
  pref1:a0(r89)<-hr1@225
  regions=2, blocks=10, points=9
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r89 1r90 2r91 3r93
    modified regnos: 89 90 91 93
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@46552
      Allocno a0r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r93,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a0(r89,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Popping a1(r90,l0)  -- assign reg 0
      Popping a0(r89,l0)  -- assign reg 1
      Popping a2(r91,l0)  -- assign reg 2
      Popping a3(r93,l0)  -- assign reg 4
Disposition:
    0:r89  l0     1    1:r90  l0     0    2:r91  l0     2    3:r93  l0     4
New iteration of spill/restore move
+++Costs: overall -900, reg -900, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={4d} r4={6d,2u} r5={6d,2u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={10d,3u} r18={3d} r19={3d} r20={1d,13u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r89={3d,2u} r90={2d,3u} r91={1d,2u} r93={1d,1u} 
;;    total ref usage 321{257d,62u,2e} in 27{24 regular + 3 call} insns.
(note 3 0 9 NOTE_INSN_DELETED)
(note 9 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 9 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.2470+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":4 1012 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 5 12 2 (parallel [
            (set (reg/f:DI 93)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 93)) "main.c":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f9d76de2990 *.LC0>)) "main.c":6 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":6 84 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f9d76ccdb00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":6 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 16 15 17 2 (set (reg:SI 91 [ n.0_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "main.c":9 82 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ n.0_12 ])
            (const_int 1 [0x1]))) "main.c":9 7 {*cmpsi_1}
     (nil))
(jump_insn 18 17 44 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 49)
            (pc))) "main.c":9 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 49)
(note 44 18 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 44 7 3 (set (reg/v:SI 89 [ f ])
        (const_int 1 [0x1])) "main.c":8 82 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 22 3 (set (reg/v:SI 90 [ i ])
        (const_int 2 [0x2])) "main.c":7 82 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(code_label 22 7 19 4 3 (nil) [1 uses])
(note 19 22 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg/v:SI 89 [ f ])
                (mult:SI (reg/v:SI 89 [ f ])
                    (reg/v:SI 90 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11 338 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 23 4 (parallel [
            (set (reg/v:SI 90 [ i ])
                (plus:SI (reg/v:SI 90 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":12 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 21 24 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 90 [ i ])
            (reg:SI 91 [ n.0_12 ]))) "main.c":9 7 {*cmpsi_1}
     (nil))
(jump_insn 24 23 54 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 22)
            (pc))) "main.c":9 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 22)
(note 54 24 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 55 54 56 5 (set (pc)
        (label_ref 25)) 659 {jump}
     (nil)
 -> 25)
(barrier 56 55 49)
(code_label 49 56 48 6 5 (nil) [1 uses])
(note 48 49 8 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 8 48 25 6 (set (reg/v:SI 89 [ f ])
        (const_int 1 [0x1])) "main.c":8 82 {*movsi_internal}
     (nil))
(code_label 25 8 26 7 2 (nil) [1 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:SI 1 dx)
        (reg/v:SI 89 [ f ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":104 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 89 [ f ])
        (nil)))
(insn 28 27 29 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f9d76de2a20 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":104 81 {*movdi_internal}
     (nil))
(insn 29 28 30 7 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":104 82 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":104 84 {*movqi_internal}
     (nil))
(call_insn 31 30 36 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f9d76cf8700 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":104 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 36 31 37 7 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "main.c":15 82 {*movsi_internal}
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.2470+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "main.c":15 1016 {stack_tls_protect_test_di}
     (nil))
(jump_insn 38 37 50 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "main.c":15 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 41)
(note 50 38 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 39 50 40 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f9d76de9600 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":15 665 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 40 39 41)
(code_label 41 40 51 9 4 (nil) [1 uses])
(note 51 41 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 51 0 9 (use (reg/i:SI 0 ax)) "main.c":15 -1
     (nil))
