Terminals unused in grammar

   DOT
   POI
   DEC
   OCT
   HEX
   BOOL
   STRUCT


State 0 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce
State 171 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 175 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements
    2        | T_VOID MAIN LBRACE RBRACE LPAREN statements RPAREN

    3 statements: statement
    4           | statements statement

    5 statement: SEMICOLON
    6          | declaration SEMICOLON
    7          | assignment SEMICOLON
    8          | jump SEMICOLON
    9          | loop
   10          | control
   11          | function

   12 function: functionDecl SEMICOLON
   13         | functionCall SEMICOLON
   14         | functionDefi

   15 functionDefi: type ID LBRACE paramList RBRACE LPAREN statements RPAREN

   16 functionDecl: type ID LBRACE RBRACE

   17 functionCall: SCANF LBRACE STRING scanfIdlist RBRACE
   18             | PRINTF LBRACE STRING printfIdlist RBRACE
   19             | ID LBRACE paramList RBRACE

   20 paramList: paramList COMMA expr
   21          | expr
   22          | %empty

   23 scanfIdlist: scanfIdlist COMMA REF ID
   24            | COMMA REF ID

   25 printfIdlist: printfIdlist COMMA ID
   26             | COMMA ID

   27 idlist: idlist COMMA ID ASG expr
   28       | idlist COMMA ID
   29       | ID ASG expr
   30       | ID

   31 declaration: type idlist
   32            | CONST type idlist

   33 type: T_BOOL
   34     | T_INT
   35     | T_CHAR
   36     | T_STRING
   37     | T_VOID

   38 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN
   39     | WHILE LBRACE expr RBRACE LPAREN statements RPAREN

   40 forcon: declaration SEMICOLON expr SEMICOLON assignment
   41       | assignment SEMICOLON expr SEMICOLON assignment

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN
   43        | IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

   44 jump: BREAK
   45     | CONTINUE
   46     | RETURN expr
   47     | RETURN

   48 assignment: %empty
   49           | ID ASG expr
   50           | ID ADDASG expr
   51           | ID MINASG expr
   52           | ID MULASG expr
   53           | ID DIVASG expr
   54           | ID MODASG expr
   55           | ADDASGO ID
   56           | MINASGO ID
   57           | ID ADDASGO
   58           | ID MINASGO

   59 expr: expr ADD expr
   60     | expr MIN expr
   61     | expr MUL expr
   62     | expr DIV expr
   63     | expr MOD expr
   64     | expr AND expr
   65     | expr OR expr
   66     | expr GT expr
   67     | expr GTQ expr
   68     | expr LT expr
   69     | expr LTQ expr
   70     | expr NEQ expr
   71     | expr EQU expr
   72     | NOT expr
   73     | ADD expr
   74     | MIN expr
   75     | REF expr
   76     | ID
   77     | INTEGER
   78     | CHAR
   79     | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
ASG (258) 27 29 49
ADDASG (259) 50
MINASG (260) 51
MULASG (261) 52
DIVASG (262) 53
MODASG (263) 54
ADDASGO (264) 55 57
MINASGO (265) 56 58
DOT (266)
REF (267) 23 24 75
POI (268)
NOT (269) 72
ADD (270) 59 73
MIN (271) 60 74
MUL (272) 61
DIV (273) 62
MOD (274) 63
EQU (275) 71
GT (276) 66
LT (277) 68
GTQ (278) 67
LTQ (279) 69
NEQ (280) 70
AND (281) 64
OR (282) 65
LBRACE (283) 2 15 16 17 18 19 38 39 42 43
RBRACE (284) 2 15 16 17 18 19 38 39 42 43
LPAREN (285) 2 15 38 39 42 43
RPAREN (286) 2 15 38 39 42 43
ID (287) 15 16 19 23 24 25 26 27 28 29 30 49 50 51 52 53 54 55 56 57
    58 76
INTEGER (288) 77
MAIN (289) 2
DEC (290)
OCT (291)
HEX (292)
CHAR (293) 78
BOOL (294)
STRING (295) 17 18 79
T_BOOL (296) 33
T_INT (297) 34
T_CHAR (298) 35
T_STRING (299) 36
T_VOID (300) 2 37
CONST (301) 32
STRUCT (302)
IF (303) 42 43
ELSE (304) 43
WHILE (305) 39
FOR (306) 38
RETURN (307) 46 47
CONTINUE (308) 45
BREAK (309) 44
PRINTF (310) 18
SCANF (311) 17
SEMICOLON (312) 5 6 7 8 12 13 40 41
COMMA (313) 20 23 24 25 26 27 28


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1 2, on right: 0
statements (61)
    on left: 3 4, on right: 1 2 4 15 38 39 42 43
statement (62)
    on left: 5 6 7 8 9 10 11, on right: 3 4
function (63)
    on left: 12 13 14, on right: 11
functionDefi (64)
    on left: 15, on right: 14
functionDecl (65)
    on left: 16, on right: 12
functionCall (66)
    on left: 17 18 19, on right: 13
paramList (67)
    on left: 20 21 22, on right: 15 19 20
scanfIdlist (68)
    on left: 23 24, on right: 17 23
printfIdlist (69)
    on left: 25 26, on right: 18 25
idlist (70)
    on left: 27 28 29 30, on right: 27 28 31 32
declaration (71)
    on left: 31 32, on right: 6 40
type (72)
    on left: 33 34 35 36 37, on right: 15 16 31 32
loop (73)
    on left: 38 39, on right: 9
forcon (74)
    on left: 40 41, on right: 38
control (75)
    on left: 42 43, on right: 10
jump (76)
    on left: 44 45 46 47, on right: 8
assignment (77)
    on left: 48 49 50 51 52 53 54 55 56 57 58, on right: 7 40 41
expr (78)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79, on right: 20 21 27 29 39 40 41 42 43 46 49 50 51 52 53
    54 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75


State 0

    0 $accept: . program $end

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    program       go to state 19
    statements    go to state 20
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 1

   55 assignment: ADDASGO . ID

    ID  shift, and go to state 32


State 2

   56 assignment: MINASGO . ID

    ID  shift, and go to state 33


State 3

   19 functionCall: ID . LBRACE paramList RBRACE
   49 assignment: ID . ASG expr
   50           | ID . ADDASG expr
   51           | ID . MINASG expr
   52           | ID . MULASG expr
   53           | ID . DIVASG expr
   54           | ID . MODASG expr
   57           | ID . ADDASGO
   58           | ID . MINASGO

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41
    LBRACE   shift, and go to state 42


State 4

   33 type: T_BOOL .

    $default  reduce using rule 33 (type)


State 5

   34 type: T_INT .

    $default  reduce using rule 34 (type)


State 6

   35 type: T_CHAR .

    $default  reduce using rule 35 (type)


State 7

   36 type: T_STRING .

    $default  reduce using rule 36 (type)


State 8

    2 program: T_VOID . MAIN LBRACE RBRACE LPAREN statements RPAREN
   37 type: T_VOID .

    MAIN  shift, and go to state 43

    $default  reduce using rule 37 (type)


State 9

   32 declaration: CONST . type idlist

    T_BOOL    shift, and go to state 4
    T_INT     shift, and go to state 5
    T_CHAR    shift, and go to state 6
    T_STRING  shift, and go to state 7
    T_VOID    shift, and go to state 44

    type  go to state 45


State 10

   42 control: IF . LBRACE expr RBRACE LPAREN statements RPAREN
   43        | IF . LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LBRACE  shift, and go to state 46


State 11

   39 loop: WHILE . LBRACE expr RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 47


State 12

   38 loop: FOR . LBRACE forcon RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 48


State 13

   46 jump: RETURN . expr
   47     | RETURN .

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    $default  reduce using rule 47 (jump)

    expr  go to state 57


State 14

   45 jump: CONTINUE .

    $default  reduce using rule 45 (jump)


State 15

   44 jump: BREAK .

    $default  reduce using rule 44 (jump)


State 16

   18 functionCall: PRINTF . LBRACE STRING printfIdlist RBRACE

    LBRACE  shift, and go to state 58


State 17

   17 functionCall: SCANF . LBRACE STRING scanfIdlist RBRACE

    LBRACE  shift, and go to state 59


State 18

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 19

    0 $accept: program . $end

    $end  shift, and go to state 60


State 20

    1 program: statements .
    4 statements: statements . statement

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]
    $default   reduce using rule 1 (program)

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 21

    3 statements: statement .

    $default  reduce using rule 3 (statements)


State 22

   11 statement: function .

    $default  reduce using rule 11 (statement)


State 23

   14 function: functionDefi .

    $default  reduce using rule 14 (function)


State 24

   12 function: functionDecl . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 25

   13 function: functionCall . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 26

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 27

   15 functionDefi: type . ID LBRACE paramList RBRACE LPAREN statements RPAREN
   16 functionDecl: type . ID LBRACE RBRACE
   31 declaration: type . idlist

    ID  shift, and go to state 65

    idlist  go to state 66


State 28

    9 statement: loop .

    $default  reduce using rule 9 (statement)


State 29

   10 statement: control .

    $default  reduce using rule 10 (statement)


State 30

    8 statement: jump . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 31

    7 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 32

   55 assignment: ADDASGO ID .

    $default  reduce using rule 55 (assignment)


State 33

   56 assignment: MINASGO ID .

    $default  reduce using rule 56 (assignment)


State 34

   49 assignment: ID ASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 69


State 35

   50 assignment: ID ADDASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 70


State 36

   51 assignment: ID MINASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 71


State 37

   52 assignment: ID MULASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 72


State 38

   53 assignment: ID DIVASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 73


State 39

   54 assignment: ID MODASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 74


State 40

   57 assignment: ID ADDASGO .

    $default  reduce using rule 57 (assignment)


State 41

   58 assignment: ID MINASGO .

    $default  reduce using rule 58 (assignment)


State 42

   19 functionCall: ID LBRACE . paramList RBRACE

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    $default  reduce using rule 22 (paramList)

    paramList  go to state 75
    expr       go to state 76


State 43

    2 program: T_VOID MAIN . LBRACE RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 77


State 44

   37 type: T_VOID .

    $default  reduce using rule 37 (type)


State 45

   32 declaration: CONST type . idlist

    ID  shift, and go to state 78

    idlist  go to state 79


State 46

   42 control: IF LBRACE . expr RBRACE LPAREN statements RPAREN
   43        | IF LBRACE . expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 80


State 47

   39 loop: WHILE LBRACE . expr RBRACE LPAREN statements RPAREN

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 81


State 48

   38 loop: FOR LBRACE . forcon RBRACE LPAREN statements RPAREN

    ADDASGO   shift, and go to state 1
    MINASGO   shift, and go to state 2
    ID        shift, and go to state 82
    T_BOOL    shift, and go to state 4
    T_INT     shift, and go to state 5
    T_CHAR    shift, and go to state 6
    T_STRING  shift, and go to state 7
    T_VOID    shift, and go to state 44
    CONST     shift, and go to state 9

    $default  reduce using rule 48 (assignment)

    declaration  go to state 83
    type         go to state 84
    forcon       go to state 85
    assignment   go to state 86


State 49

   75 expr: REF . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 87


State 50

   72 expr: NOT . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 88


State 51

   73 expr: ADD . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 89


State 52

   74 expr: MIN . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 90


State 53

   76 expr: ID .

    $default  reduce using rule 76 (expr)


State 54

   77 expr: INTEGER .

    $default  reduce using rule 77 (expr)


State 55

   78 expr: CHAR .

    $default  reduce using rule 78 (expr)


State 56

   79 expr: STRING .

    $default  reduce using rule 79 (expr)


State 57

   46 jump: RETURN expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 46 (jump)


State 58

   18 functionCall: PRINTF LBRACE . STRING printfIdlist RBRACE

    STRING  shift, and go to state 104


State 59

   17 functionCall: SCANF LBRACE . STRING scanfIdlist RBRACE

    STRING  shift, and go to state 105


State 60

    0 $accept: program $end .

    $default  accept


State 61

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 62

   12 function: functionDecl SEMICOLON .

    $default  reduce using rule 12 (function)


State 63

   13 function: functionCall SEMICOLON .

    $default  reduce using rule 13 (function)


State 64

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 65

   15 functionDefi: type ID . LBRACE paramList RBRACE LPAREN statements RPAREN
   16 functionDecl: type ID . LBRACE RBRACE
   29 idlist: ID . ASG expr
   30       | ID .

    ASG     shift, and go to state 106
    LBRACE  shift, and go to state 107

    $default  reduce using rule 30 (idlist)


State 66

   27 idlist: idlist . COMMA ID ASG expr
   28       | idlist . COMMA ID
   31 declaration: type idlist .

    COMMA  shift, and go to state 108

    $default  reduce using rule 31 (declaration)


State 67

    8 statement: jump SEMICOLON .

    $default  reduce using rule 8 (statement)


State 68

    7 statement: assignment SEMICOLON .

    $default  reduce using rule 7 (statement)


State 69

   49 assignment: ID ASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 49 (assignment)


State 70

   50 assignment: ID ADDASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 50 (assignment)


State 71

   51 assignment: ID MINASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 51 (assignment)


State 72

   52 assignment: ID MULASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 52 (assignment)


State 73

   53 assignment: ID DIVASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 53 (assignment)


State 74

   54 assignment: ID MODASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 54 (assignment)


State 75

   19 functionCall: ID LBRACE paramList . RBRACE
   20 paramList: paramList . COMMA expr

    RBRACE  shift, and go to state 109
    COMMA   shift, and go to state 110


State 76

   21 paramList: expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 21 (paramList)


State 77

    2 program: T_VOID MAIN LBRACE . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 111


State 78

   29 idlist: ID . ASG expr
   30       | ID .

    ASG  shift, and go to state 106

    $default  reduce using rule 30 (idlist)


State 79

   27 idlist: idlist . COMMA ID ASG expr
   28       | idlist . COMMA ID
   32 declaration: CONST type idlist .

    COMMA  shift, and go to state 108

    $default  reduce using rule 32 (declaration)


State 80

   42 control: IF LBRACE expr . RBRACE LPAREN statements RPAREN
   43        | IF LBRACE expr . RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD     shift, and go to state 91
    MIN     shift, and go to state 92
    MUL     shift, and go to state 93
    DIV     shift, and go to state 94
    MOD     shift, and go to state 95
    EQU     shift, and go to state 96
    GT      shift, and go to state 97
    LT      shift, and go to state 98
    GTQ     shift, and go to state 99
    LTQ     shift, and go to state 100
    NEQ     shift, and go to state 101
    AND     shift, and go to state 102
    OR      shift, and go to state 103
    RBRACE  shift, and go to state 112


State 81

   39 loop: WHILE LBRACE expr . RBRACE LPAREN statements RPAREN
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD     shift, and go to state 91
    MIN     shift, and go to state 92
    MUL     shift, and go to state 93
    DIV     shift, and go to state 94
    MOD     shift, and go to state 95
    EQU     shift, and go to state 96
    GT      shift, and go to state 97
    LT      shift, and go to state 98
    GTQ     shift, and go to state 99
    LTQ     shift, and go to state 100
    NEQ     shift, and go to state 101
    AND     shift, and go to state 102
    OR      shift, and go to state 103
    RBRACE  shift, and go to state 113


State 82

   49 assignment: ID . ASG expr
   50           | ID . ADDASG expr
   51           | ID . MINASG expr
   52           | ID . MULASG expr
   53           | ID . DIVASG expr
   54           | ID . MODASG expr
   57           | ID . ADDASGO
   58           | ID . MINASGO

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41


State 83

   40 forcon: declaration . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 114


State 84

   31 declaration: type . idlist

    ID  shift, and go to state 78

    idlist  go to state 66


State 85

   38 loop: FOR LBRACE forcon . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 115


State 86

   41 forcon: assignment . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 116


State 87

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr
   75     | REF expr .

    $default  reduce using rule 75 (expr)


State 88

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr
   72     | NOT expr .

    $default  reduce using rule 72 (expr)


State 89

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr
   73     | ADD expr .

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 73 (expr)


State 90

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr
   74     | MIN expr .

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 74 (expr)


State 91

   59 expr: expr ADD . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 117


State 92

   60 expr: expr MIN . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 118


State 93

   61 expr: expr MUL . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 119


State 94

   62 expr: expr DIV . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 120


State 95

   63 expr: expr MOD . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 121


State 96

   71 expr: expr EQU . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 122


State 97

   66 expr: expr GT . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 123


State 98

   68 expr: expr LT . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 124


State 99

   67 expr: expr GTQ . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 125


State 100

   69 expr: expr LTQ . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 126


State 101

   70 expr: expr NEQ . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 127


State 102

   64 expr: expr AND . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 128


State 103

   65 expr: expr OR . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 129


State 104

   18 functionCall: PRINTF LBRACE STRING . printfIdlist RBRACE

    COMMA  shift, and go to state 130

    printfIdlist  go to state 131


State 105

   17 functionCall: SCANF LBRACE STRING . scanfIdlist RBRACE

    COMMA  shift, and go to state 132

    scanfIdlist  go to state 133


State 106

   29 idlist: ID ASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 134


State 107

   15 functionDefi: type ID LBRACE . paramList RBRACE LPAREN statements RPAREN
   16 functionDecl: type ID LBRACE . RBRACE

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    RBRACE   shift, and go to state 135
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    RBRACE    [reduce using rule 22 (paramList)]
    $default  reduce using rule 22 (paramList)

    paramList  go to state 136
    expr       go to state 76


State 108

   27 idlist: idlist COMMA . ID ASG expr
   28       | idlist COMMA . ID

    ID  shift, and go to state 137


State 109

   19 functionCall: ID LBRACE paramList RBRACE .

    $default  reduce using rule 19 (functionCall)


State 110

   20 paramList: paramList COMMA . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 138


State 111

    2 program: T_VOID MAIN LBRACE RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 139


State 112

   42 control: IF LBRACE expr RBRACE . LPAREN statements RPAREN
   43        | IF LBRACE expr RBRACE . LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LPAREN  shift, and go to state 140


State 113

   39 loop: WHILE LBRACE expr RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 141


State 114

   40 forcon: declaration SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 142


State 115

   38 loop: FOR LBRACE forcon RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 143


State 116

   41 forcon: assignment SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 144


State 117

   59 expr: expr . ADD expr
   59     | expr ADD expr .
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 59 (expr)


State 118

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   60     | expr MIN expr .
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 60 (expr)


State 119

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   61     | expr MUL expr .
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    $default  reduce using rule 61 (expr)


State 120

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   62     | expr DIV expr .
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    $default  reduce using rule 62 (expr)


State 121

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   63     | expr MOD expr .
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    $default  reduce using rule 63 (expr)


State 122

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr
   71     | expr EQU expr .

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 71 (expr)


State 123

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   66     | expr GT expr .
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 66 (expr)


State 124

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   68     | expr LT expr .
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 68 (expr)


State 125

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   67     | expr GTQ expr .
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 67 (expr)


State 126

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   69     | expr LTQ expr .
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 69 (expr)


State 127

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   70     | expr NEQ expr .
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 70 (expr)


State 128

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   64     | expr AND expr .
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101

    $default  reduce using rule 64 (expr)


State 129

   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   65     | expr OR expr .
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101

    $default  reduce using rule 65 (expr)


State 130

   26 printfIdlist: COMMA . ID

    ID  shift, and go to state 145


State 131

   18 functionCall: PRINTF LBRACE STRING printfIdlist . RBRACE
   25 printfIdlist: printfIdlist . COMMA ID

    RBRACE  shift, and go to state 146
    COMMA   shift, and go to state 147


State 132

   24 scanfIdlist: COMMA . REF ID

    REF  shift, and go to state 148


State 133

   17 functionCall: SCANF LBRACE STRING scanfIdlist . RBRACE
   23 scanfIdlist: scanfIdlist . COMMA REF ID

    RBRACE  shift, and go to state 149
    COMMA   shift, and go to state 150


State 134

   29 idlist: ID ASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 29 (idlist)


State 135

   16 functionDecl: type ID LBRACE RBRACE .

    $default  reduce using rule 16 (functionDecl)


State 136

   15 functionDefi: type ID LBRACE paramList . RBRACE LPAREN statements RPAREN
   20 paramList: paramList . COMMA expr

    RBRACE  shift, and go to state 151
    COMMA   shift, and go to state 110


State 137

   27 idlist: idlist COMMA ID . ASG expr
   28       | idlist COMMA ID .

    ASG  shift, and go to state 152

    $default  reduce using rule 28 (idlist)


State 138

   20 paramList: paramList COMMA expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 20 (paramList)


State 139

    2 program: T_VOID MAIN LBRACE RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statements    go to state 153
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 140

   42 control: IF LBRACE expr RBRACE LPAREN . statements RPAREN
   43        | IF LBRACE expr RBRACE LPAREN . statements RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statements    go to state 154
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 141

   39 loop: WHILE LBRACE expr RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statements    go to state 155
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 142

   40 forcon: declaration SEMICOLON expr . SEMICOLON assignment
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD        shift, and go to state 91
    MIN        shift, and go to state 92
    MUL        shift, and go to state 93
    DIV        shift, and go to state 94
    MOD        shift, and go to state 95
    EQU        shift, and go to state 96
    GT         shift, and go to state 97
    LT         shift, and go to state 98
    GTQ        shift, and go to state 99
    LTQ        shift, and go to state 100
    NEQ        shift, and go to state 101
    AND        shift, and go to state 102
    OR         shift, and go to state 103
    SEMICOLON  shift, and go to state 156


State 143

   38 loop: FOR LBRACE forcon RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statements    go to state 157
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 144

   41 forcon: assignment SEMICOLON expr . SEMICOLON assignment
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD        shift, and go to state 91
    MIN        shift, and go to state 92
    MUL        shift, and go to state 93
    DIV        shift, and go to state 94
    MOD        shift, and go to state 95
    EQU        shift, and go to state 96
    GT         shift, and go to state 97
    LT         shift, and go to state 98
    GTQ        shift, and go to state 99
    LTQ        shift, and go to state 100
    NEQ        shift, and go to state 101
    AND        shift, and go to state 102
    OR         shift, and go to state 103
    SEMICOLON  shift, and go to state 158


State 145

   26 printfIdlist: COMMA ID .

    $default  reduce using rule 26 (printfIdlist)


State 146

   18 functionCall: PRINTF LBRACE STRING printfIdlist RBRACE .

    $default  reduce using rule 18 (functionCall)


State 147

   25 printfIdlist: printfIdlist COMMA . ID

    ID  shift, and go to state 159


State 148

   24 scanfIdlist: COMMA REF . ID

    ID  shift, and go to state 160


State 149

   17 functionCall: SCANF LBRACE STRING scanfIdlist RBRACE .

    $default  reduce using rule 17 (functionCall)


State 150

   23 scanfIdlist: scanfIdlist COMMA . REF ID

    REF  shift, and go to state 161


State 151

   15 functionDefi: type ID LBRACE paramList RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 162


State 152

   27 idlist: idlist COMMA ID ASG . expr

    REF      shift, and go to state 49
    NOT      shift, and go to state 50
    ADD      shift, and go to state 51
    MIN      shift, and go to state 52
    ID       shift, and go to state 53
    INTEGER  shift, and go to state 54
    CHAR     shift, and go to state 55
    STRING   shift, and go to state 56

    expr  go to state 163


State 153

    2 program: T_VOID MAIN LBRACE RBRACE LPAREN statements . RPAREN
    4 statements: statements . statement

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 164
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 154

    4 statements: statements . statement
   42 control: IF LBRACE expr RBRACE LPAREN statements . RPAREN
   43        | IF LBRACE expr RBRACE LPAREN statements . RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 165
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 155

    4 statements: statements . statement
   39 loop: WHILE LBRACE expr RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 166
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 156

   40 forcon: declaration SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 82

    $default  reduce using rule 48 (assignment)

    assignment  go to state 167


State 157

    4 statements: statements . statement
   38 loop: FOR LBRACE forcon RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 168
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 158

   41 forcon: assignment SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 82

    $default  reduce using rule 48 (assignment)

    assignment  go to state 169


State 159

   25 printfIdlist: printfIdlist COMMA ID .

    $default  reduce using rule 25 (printfIdlist)


State 160

   24 scanfIdlist: COMMA REF ID .

    $default  reduce using rule 24 (scanfIdlist)


State 161

   23 scanfIdlist: scanfIdlist COMMA REF . ID

    ID  shift, and go to state 170


State 162

   15 functionDefi: type ID LBRACE paramList RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statements    go to state 171
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 163

   27 idlist: idlist COMMA ID ASG expr .
   59 expr: expr . ADD expr
   60     | expr . MIN expr
   61     | expr . MUL expr
   62     | expr . DIV expr
   63     | expr . MOD expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . GT expr
   67     | expr . GTQ expr
   68     | expr . LT expr
   69     | expr . LTQ expr
   70     | expr . NEQ expr
   71     | expr . EQU expr

    ADD  shift, and go to state 91
    MIN  shift, and go to state 92
    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95
    EQU  shift, and go to state 96
    GT   shift, and go to state 97
    LT   shift, and go to state 98
    GTQ  shift, and go to state 99
    LTQ  shift, and go to state 100
    NEQ  shift, and go to state 101
    AND  shift, and go to state 102
    OR   shift, and go to state 103

    $default  reduce using rule 27 (idlist)


State 164

    2 program: T_VOID MAIN LBRACE RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 2 (program)


State 165

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN .
   43        | IF LBRACE expr RBRACE LPAREN statements RPAREN . ELSE LPAREN statements RPAREN

    ELSE  shift, and go to state 172

    $default  reduce using rule 42 (control)


State 166

   39 loop: WHILE LBRACE expr RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 39 (loop)


State 167

   40 forcon: declaration SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 40 (forcon)


State 168

   38 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 38 (loop)


State 169

   41 forcon: assignment SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 41 (forcon)


State 170

   23 scanfIdlist: scanfIdlist COMMA REF ID .

    $default  reduce using rule 23 (scanfIdlist)


State 171

    4 statements: statements . statement
   15 functionDefi: type ID LBRACE paramList RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 173
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 172

   43 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 174


State 173

   15 functionDefi: type ID LBRACE paramList RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 15 (functionDefi)


State 174

   43 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statements    go to state 175
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 175

    4 statements: statements . statement
   43 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 176
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 44
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 48 (assignment)]

    statement     go to state 61
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 176

   43 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN .

    $default  reduce using rule 43 (control)
