Terminals unused in grammar

   DOT
   POI
   DEC
   OCT
   HEX
   BOOL
   STRUCT
   PRINTF
   SCANF


State 0 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 142 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | function
    6          | declaration SEMICOLON
    7          | assignment SEMICOLON
    8          | expr SEMICOLON
    9          | jump SEMICOLON
   10          | loop
   11          | control

   12 function: functionDecl
   13         | functionCall
   14         | functionDefi

   15 functionDefi: type ID LBRACE RBRACE LPAREN statements RPAREN

   16 functionDecl: type ID LBRACE RBRACE SEMICOLON

   17 functionCall: ID LBRACE RBRACE

   18 idlist: idlist COMMA ID ASG expr
   19       | idlist COMMA ID
   20       | ID ASG expr
   21       | ID

   22 declaration: type idlist
   23            | CONST type idlist

   24 type: T_BOOL
   25     | T_INT
   26     | T_CHAR
   27     | T_STRING

   28 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN
   29     | WHILE LBRACE expr RBRACE LPAREN statements RPAREN

   30 forcon: declaration SEMICOLON expr SEMICOLON assignment
   31       | assignment SEMICOLON expr SEMICOLON assignment

   32 control: IF LBRACE expr RBRACE LPAREN statements RPAREN
   33        | IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

   34 jump: BREAK
   35     | CONTINUE
   36     | RETURN expr
   37     | RETURN

   38 assignment: %empty
   39           | ID ASG expr
   40           | ID ADDASG expr
   41           | ID MINASG expr
   42           | ID MULASG expr
   43           | ID DIVASG expr
   44           | ID MODASG expr
   45           | ADDASGO ID
   46           | MINASGO ID
   47           | ID ADDASGO
   48           | ID MINASGO

   49 expr: expr ADD expr
   50     | expr MIN expr
   51     | expr MUL expr
   52     | expr DIV expr
   53     | expr MOD expr
   54     | expr AND expr
   55     | expr OR expr
   56     | expr GT expr
   57     | expr GTQ expr
   58     | expr LT expr
   59     | expr LTQ expr
   60     | expr NEQ expr
   61     | expr EQU expr
   62     | NOT expr
   63     | ADD expr
   64     | MIN expr
   65     | REF expr
   66     | ID
   67     | INTEGER
   68     | CHAR
   69     | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
ASG (258) 18 20 39
ADDASG (259) 40
MINASG (260) 41
MULASG (261) 42
DIVASG (262) 43
MODASG (263) 44
ADDASGO (264) 45 47
MINASGO (265) 46 48
DOT (266)
REF (267) 65
POI (268)
NOT (269) 62
ADD (270) 49 63
MIN (271) 50 64
MUL (272) 51
DIV (273) 52
MOD (274) 53
EQU (275) 61
GT (276) 56
LT (277) 58
GTQ (278) 57
LTQ (279) 59
NEQ (280) 60
AND (281) 54
OR (282) 55
LBRACE (283) 15 16 17 28 29 32 33
RBRACE (284) 15 16 17 28 29 32 33
LPAREN (285) 15 28 29 32 33
RPAREN (286) 15 28 29 32 33
ID (287) 15 16 17 18 19 20 21 39 40 41 42 43 44 45 46 47 48 66
INTEGER (288) 67
DEC (289)
OCT (290)
HEX (291)
CHAR (292) 68
BOOL (293)
STRING (294) 69
T_BOOL (295) 24
T_INT (296) 25
T_CHAR (297) 26
T_STRING (298) 27
CONST (299) 23
STRUCT (300)
IF (301) 32 33
ELSE (302) 33
WHILE (303) 29
FOR (304) 28
RETURN (305) 36 37
CONTINUE (306) 35
BREAK (307) 34
PRINTF (308)
SCANF (309)
SEMICOLON (310) 4 6 7 8 9 16 30 31
COMMA (311) 18 19


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
program (58)
    on left: 1, on right: 0
statements (59)
    on left: 2 3, on right: 1 3 15 28 29 32 33
statement (60)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
function (61)
    on left: 12 13 14, on right: 5
functionDefi (62)
    on left: 15, on right: 14
functionDecl (63)
    on left: 16, on right: 12
functionCall (64)
    on left: 17, on right: 13
idlist (65)
    on left: 18 19 20 21, on right: 18 19 22 23
declaration (66)
    on left: 22 23, on right: 6 30
type (67)
    on left: 24 25 26 27, on right: 15 16 22 23
loop (68)
    on left: 28 29, on right: 10
forcon (69)
    on left: 30 31, on right: 28
control (70)
    on left: 32 33, on right: 11
jump (71)
    on left: 34 35 36 37, on right: 9
assignment (72)
    on left: 38 39 40 41 42 43 44 45 46 47 48, on right: 7 30 31
expr (73)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69, on right: 8 18 20 29 30 31 32 33 36 39 40 41 42 43 44
    49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65


State 0

    0 $accept: . program $end

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    program       go to state 23
    statements    go to state 24
    statement     go to state 25
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 1

   45 assignment: ADDASGO . ID

    ID  shift, and go to state 37


State 2

   46 assignment: MINASGO . ID

    ID  shift, and go to state 38


State 3

   65 expr: REF . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 40


State 4

   62 expr: NOT . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 41


State 5

   63 expr: ADD . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 42


State 6

   64 expr: MIN . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 43


State 7

   17 functionCall: ID . LBRACE RBRACE
   39 assignment: ID . ASG expr
   40           | ID . ADDASG expr
   41           | ID . MINASG expr
   42           | ID . MULASG expr
   43           | ID . DIVASG expr
   44           | ID . MODASG expr
   47           | ID . ADDASGO
   48           | ID . MINASGO
   66 expr: ID .

    ASG      shift, and go to state 44
    ADDASG   shift, and go to state 45
    MINASG   shift, and go to state 46
    MULASG   shift, and go to state 47
    DIVASG   shift, and go to state 48
    MODASG   shift, and go to state 49
    ADDASGO  shift, and go to state 50
    MINASGO  shift, and go to state 51
    LBRACE   shift, and go to state 52

    $default  reduce using rule 66 (expr)


State 8

   67 expr: INTEGER .

    $default  reduce using rule 67 (expr)


State 9

   68 expr: CHAR .

    $default  reduce using rule 68 (expr)


State 10

   69 expr: STRING .

    $default  reduce using rule 69 (expr)


State 11

   24 type: T_BOOL .

    $default  reduce using rule 24 (type)


State 12

   25 type: T_INT .

    $default  reduce using rule 25 (type)


State 13

   26 type: T_CHAR .

    $default  reduce using rule 26 (type)


State 14

   27 type: T_STRING .

    $default  reduce using rule 27 (type)


State 15

   23 declaration: CONST . type idlist

    T_BOOL    shift, and go to state 11
    T_INT     shift, and go to state 12
    T_CHAR    shift, and go to state 13
    T_STRING  shift, and go to state 14

    type  go to state 53


State 16

   32 control: IF . LBRACE expr RBRACE LPAREN statements RPAREN
   33        | IF . LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LBRACE  shift, and go to state 54


State 17

   29 loop: WHILE . LBRACE expr RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 55


State 18

   28 loop: FOR . LBRACE forcon RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 56


State 19

   36 jump: RETURN . expr
   37     | RETURN .

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    $default  reduce using rule 37 (jump)

    expr  go to state 57


State 20

   35 jump: CONTINUE .

    $default  reduce using rule 35 (jump)


State 21

   34 jump: BREAK .

    $default  reduce using rule 34 (jump)


State 22

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 58


State 24

    1 program: statements .
    3 statements: statements . statement

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]
    $default   reduce using rule 1 (program)

    statement     go to state 59
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 25

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 26

    5 statement: function .

    $default  reduce using rule 5 (statement)


State 27

   14 function: functionDefi .

    $default  reduce using rule 14 (function)


State 28

   12 function: functionDecl .

    $default  reduce using rule 12 (function)


State 29

   13 function: functionCall .

    $default  reduce using rule 13 (function)


State 30

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 31

   15 functionDefi: type . ID LBRACE RBRACE LPAREN statements RPAREN
   16 functionDecl: type . ID LBRACE RBRACE SEMICOLON
   22 declaration: type . idlist

    ID  shift, and go to state 61

    idlist  go to state 62


State 32

   10 statement: loop .

    $default  reduce using rule 10 (statement)


State 33

   11 statement: control .

    $default  reduce using rule 11 (statement)


State 34

    9 statement: jump . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 35

    7 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 36

    8 statement: expr . SEMICOLON
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD        shift, and go to state 65
    MIN        shift, and go to state 66
    MUL        shift, and go to state 67
    DIV        shift, and go to state 68
    MOD        shift, and go to state 69
    EQU        shift, and go to state 70
    GT         shift, and go to state 71
    LT         shift, and go to state 72
    GTQ        shift, and go to state 73
    LTQ        shift, and go to state 74
    NEQ        shift, and go to state 75
    AND        shift, and go to state 76
    OR         shift, and go to state 77
    SEMICOLON  shift, and go to state 78


State 37

   45 assignment: ADDASGO ID .

    $default  reduce using rule 45 (assignment)


State 38

   46 assignment: MINASGO ID .

    $default  reduce using rule 46 (assignment)


State 39

   66 expr: ID .

    $default  reduce using rule 66 (expr)


State 40

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr
   65     | REF expr .

    $default  reduce using rule 65 (expr)


State 41

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr
   62     | NOT expr .

    $default  reduce using rule 62 (expr)


State 42

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr
   63     | ADD expr .

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 63 (expr)


State 43

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr
   64     | MIN expr .

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 64 (expr)


State 44

   39 assignment: ID ASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 79


State 45

   40 assignment: ID ADDASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 80


State 46

   41 assignment: ID MINASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 81


State 47

   42 assignment: ID MULASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 82


State 48

   43 assignment: ID DIVASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 83


State 49

   44 assignment: ID MODASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 84


State 50

   47 assignment: ID ADDASGO .

    $default  reduce using rule 47 (assignment)


State 51

   48 assignment: ID MINASGO .

    $default  reduce using rule 48 (assignment)


State 52

   17 functionCall: ID LBRACE . RBRACE

    RBRACE  shift, and go to state 85


State 53

   23 declaration: CONST type . idlist

    ID  shift, and go to state 86

    idlist  go to state 87


State 54

   32 control: IF LBRACE . expr RBRACE LPAREN statements RPAREN
   33        | IF LBRACE . expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 88


State 55

   29 loop: WHILE LBRACE . expr RBRACE LPAREN statements RPAREN

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 89


State 56

   28 loop: FOR LBRACE . forcon RBRACE LPAREN statements RPAREN

    ADDASGO   shift, and go to state 1
    MINASGO   shift, and go to state 2
    ID        shift, and go to state 90
    T_BOOL    shift, and go to state 11
    T_INT     shift, and go to state 12
    T_CHAR    shift, and go to state 13
    T_STRING  shift, and go to state 14
    CONST     shift, and go to state 15

    $default  reduce using rule 38 (assignment)

    declaration  go to state 91
    type         go to state 92
    forcon       go to state 93
    assignment   go to state 94


State 57

   36 jump: RETURN expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 36 (jump)


State 58

    0 $accept: program $end .

    $default  accept


State 59

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 60

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 61

   15 functionDefi: type ID . LBRACE RBRACE LPAREN statements RPAREN
   16 functionDecl: type ID . LBRACE RBRACE SEMICOLON
   20 idlist: ID . ASG expr
   21       | ID .

    ASG     shift, and go to state 95
    LBRACE  shift, and go to state 96

    $default  reduce using rule 21 (idlist)


State 62

   18 idlist: idlist . COMMA ID ASG expr
   19       | idlist . COMMA ID
   22 declaration: type idlist .

    COMMA  shift, and go to state 97

    $default  reduce using rule 22 (declaration)


State 63

    9 statement: jump SEMICOLON .

    $default  reduce using rule 9 (statement)


State 64

    7 statement: assignment SEMICOLON .

    $default  reduce using rule 7 (statement)


State 65

   49 expr: expr ADD . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 98


State 66

   50 expr: expr MIN . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 99


State 67

   51 expr: expr MUL . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 100


State 68

   52 expr: expr DIV . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 101


State 69

   53 expr: expr MOD . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 102


State 70

   61 expr: expr EQU . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 103


State 71

   56 expr: expr GT . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 104


State 72

   58 expr: expr LT . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 105


State 73

   57 expr: expr GTQ . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 106


State 74

   59 expr: expr LTQ . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 107


State 75

   60 expr: expr NEQ . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 108


State 76

   54 expr: expr AND . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 109


State 77

   55 expr: expr OR . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 110


State 78

    8 statement: expr SEMICOLON .

    $default  reduce using rule 8 (statement)


State 79

   39 assignment: ID ASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 39 (assignment)


State 80

   40 assignment: ID ADDASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 40 (assignment)


State 81

   41 assignment: ID MINASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 41 (assignment)


State 82

   42 assignment: ID MULASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 42 (assignment)


State 83

   43 assignment: ID DIVASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 43 (assignment)


State 84

   44 assignment: ID MODASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 44 (assignment)


State 85

   17 functionCall: ID LBRACE RBRACE .

    $default  reduce using rule 17 (functionCall)


State 86

   20 idlist: ID . ASG expr
   21       | ID .

    ASG  shift, and go to state 95

    $default  reduce using rule 21 (idlist)


State 87

   18 idlist: idlist . COMMA ID ASG expr
   19       | idlist . COMMA ID
   23 declaration: CONST type idlist .

    COMMA  shift, and go to state 97

    $default  reduce using rule 23 (declaration)


State 88

   32 control: IF LBRACE expr . RBRACE LPAREN statements RPAREN
   33        | IF LBRACE expr . RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD     shift, and go to state 65
    MIN     shift, and go to state 66
    MUL     shift, and go to state 67
    DIV     shift, and go to state 68
    MOD     shift, and go to state 69
    EQU     shift, and go to state 70
    GT      shift, and go to state 71
    LT      shift, and go to state 72
    GTQ     shift, and go to state 73
    LTQ     shift, and go to state 74
    NEQ     shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77
    RBRACE  shift, and go to state 111


State 89

   29 loop: WHILE LBRACE expr . RBRACE LPAREN statements RPAREN
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD     shift, and go to state 65
    MIN     shift, and go to state 66
    MUL     shift, and go to state 67
    DIV     shift, and go to state 68
    MOD     shift, and go to state 69
    EQU     shift, and go to state 70
    GT      shift, and go to state 71
    LT      shift, and go to state 72
    GTQ     shift, and go to state 73
    LTQ     shift, and go to state 74
    NEQ     shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77
    RBRACE  shift, and go to state 112


State 90

   39 assignment: ID . ASG expr
   40           | ID . ADDASG expr
   41           | ID . MINASG expr
   42           | ID . MULASG expr
   43           | ID . DIVASG expr
   44           | ID . MODASG expr
   47           | ID . ADDASGO
   48           | ID . MINASGO

    ASG      shift, and go to state 44
    ADDASG   shift, and go to state 45
    MINASG   shift, and go to state 46
    MULASG   shift, and go to state 47
    DIVASG   shift, and go to state 48
    MODASG   shift, and go to state 49
    ADDASGO  shift, and go to state 50
    MINASGO  shift, and go to state 51


State 91

   30 forcon: declaration . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 113


State 92

   22 declaration: type . idlist

    ID  shift, and go to state 86

    idlist  go to state 62


State 93

   28 loop: FOR LBRACE forcon . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 114


State 94

   31 forcon: assignment . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 115


State 95

   20 idlist: ID ASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 116


State 96

   15 functionDefi: type ID LBRACE . RBRACE LPAREN statements RPAREN
   16 functionDecl: type ID LBRACE . RBRACE SEMICOLON

    RBRACE  shift, and go to state 117


State 97

   18 idlist: idlist COMMA . ID ASG expr
   19       | idlist COMMA . ID

    ID  shift, and go to state 118


State 98

   49 expr: expr . ADD expr
   49     | expr ADD expr .
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 49 (expr)


State 99

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   50     | expr MIN expr .
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 50 (expr)


State 100

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   51     | expr MUL expr .
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    $default  reduce using rule 51 (expr)


State 101

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   52     | expr DIV expr .
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    $default  reduce using rule 52 (expr)


State 102

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   53     | expr MOD expr .
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    $default  reduce using rule 53 (expr)


State 103

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr
   61     | expr EQU expr .

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 61 (expr)


State 104

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   56     | expr GT expr .
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 56 (expr)


State 105

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   58     | expr LT expr .
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 58 (expr)


State 106

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   57     | expr GTQ expr .
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 57 (expr)


State 107

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   59     | expr LTQ expr .
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 59 (expr)


State 108

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   60     | expr NEQ expr .
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 60 (expr)


State 109

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   54     | expr AND expr .
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 54 (expr)


State 110

   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   55     | expr OR expr .
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 55 (expr)


State 111

   32 control: IF LBRACE expr RBRACE . LPAREN statements RPAREN
   33        | IF LBRACE expr RBRACE . LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LPAREN  shift, and go to state 119


State 112

   29 loop: WHILE LBRACE expr RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 120


State 113

   30 forcon: declaration SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 121


State 114

   28 loop: FOR LBRACE forcon RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 122


State 115

   31 forcon: assignment SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 123


State 116

   20 idlist: ID ASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 20 (idlist)


State 117

   15 functionDefi: type ID LBRACE RBRACE . LPAREN statements RPAREN
   16 functionDecl: type ID LBRACE RBRACE . SEMICOLON

    LPAREN     shift, and go to state 124
    SEMICOLON  shift, and go to state 125


State 118

   18 idlist: idlist COMMA ID . ASG expr
   19       | idlist COMMA ID .

    ASG  shift, and go to state 126

    $default  reduce using rule 19 (idlist)


State 119

   32 control: IF LBRACE expr RBRACE LPAREN . statements RPAREN
   33        | IF LBRACE expr RBRACE LPAREN . statements RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statements    go to state 127
    statement     go to state 25
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 120

   29 loop: WHILE LBRACE expr RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statements    go to state 128
    statement     go to state 25
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 121

   30 forcon: declaration SEMICOLON expr . SEMICOLON assignment
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD        shift, and go to state 65
    MIN        shift, and go to state 66
    MUL        shift, and go to state 67
    DIV        shift, and go to state 68
    MOD        shift, and go to state 69
    EQU        shift, and go to state 70
    GT         shift, and go to state 71
    LT         shift, and go to state 72
    GTQ        shift, and go to state 73
    LTQ        shift, and go to state 74
    NEQ        shift, and go to state 75
    AND        shift, and go to state 76
    OR         shift, and go to state 77
    SEMICOLON  shift, and go to state 129


State 122

   28 loop: FOR LBRACE forcon RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statements    go to state 130
    statement     go to state 25
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 123

   31 forcon: assignment SEMICOLON expr . SEMICOLON assignment
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD        shift, and go to state 65
    MIN        shift, and go to state 66
    MUL        shift, and go to state 67
    DIV        shift, and go to state 68
    MOD        shift, and go to state 69
    EQU        shift, and go to state 70
    GT         shift, and go to state 71
    LT         shift, and go to state 72
    GTQ        shift, and go to state 73
    LTQ        shift, and go to state 74
    NEQ        shift, and go to state 75
    AND        shift, and go to state 76
    OR         shift, and go to state 77
    SEMICOLON  shift, and go to state 131


State 124

   15 functionDefi: type ID LBRACE RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statements    go to state 132
    statement     go to state 25
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 125

   16 functionDecl: type ID LBRACE RBRACE SEMICOLON .

    $default  reduce using rule 16 (functionDecl)


State 126

   18 idlist: idlist COMMA ID ASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 39
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 133


State 127

    3 statements: statements . statement
   32 control: IF LBRACE expr RBRACE LPAREN statements . RPAREN
   33        | IF LBRACE expr RBRACE LPAREN statements . RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 134
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statement     go to state 59
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 128

    3 statements: statements . statement
   29 loop: WHILE LBRACE expr RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 135
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statement     go to state 59
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 129

   30 forcon: declaration SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 90

    $default  reduce using rule 38 (assignment)

    assignment  go to state 136


State 130

    3 statements: statements . statement
   28 loop: FOR LBRACE forcon RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 137
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statement     go to state 59
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 131

   31 forcon: assignment SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 90

    $default  reduce using rule 38 (assignment)

    assignment  go to state 138


State 132

    3 statements: statements . statement
   15 functionDefi: type ID LBRACE RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 139
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statement     go to state 59
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 133

   18 idlist: idlist COMMA ID ASG expr .
   49 expr: expr . ADD expr
   50     | expr . MIN expr
   51     | expr . MUL expr
   52     | expr . DIV expr
   53     | expr . MOD expr
   54     | expr . AND expr
   55     | expr . OR expr
   56     | expr . GT expr
   57     | expr . GTQ expr
   58     | expr . LT expr
   59     | expr . LTQ expr
   60     | expr . NEQ expr
   61     | expr . EQU expr

    ADD  shift, and go to state 65
    MIN  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69
    EQU  shift, and go to state 70
    GT   shift, and go to state 71
    LT   shift, and go to state 72
    GTQ  shift, and go to state 73
    LTQ  shift, and go to state 74
    NEQ  shift, and go to state 75
    AND  shift, and go to state 76
    OR   shift, and go to state 77

    $default  reduce using rule 18 (idlist)


State 134

   32 control: IF LBRACE expr RBRACE LPAREN statements RPAREN .
   33        | IF LBRACE expr RBRACE LPAREN statements RPAREN . ELSE LPAREN statements RPAREN

    ELSE  shift, and go to state 140

    $default  reduce using rule 32 (control)


State 135

   29 loop: WHILE LBRACE expr RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 29 (loop)


State 136

   30 forcon: declaration SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 30 (forcon)


State 137

   28 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 28 (loop)


State 138

   31 forcon: assignment SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 31 (forcon)


State 139

   15 functionDefi: type ID LBRACE RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 15 (functionDefi)


State 140

   33 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 141


State 141

   33 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statements    go to state 142
    statement     go to state 25
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 142

    3 statements: statements . statement
   33 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 143
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    T_BOOL     shift, and go to state 11
    T_INT      shift, and go to state 12
    T_CHAR     shift, and go to state 13
    T_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 38 (assignment)]

    statement     go to state 59
    function      go to state 26
    functionDefi  go to state 27
    functionDecl  go to state 28
    functionCall  go to state 29
    declaration   go to state 30
    type          go to state 31
    loop          go to state 32
    control       go to state 33
    jump          go to state 34
    assignment    go to state 35
    expr          go to state 36


State 143

   33 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN .

    $default  reduce using rule 33 (control)
