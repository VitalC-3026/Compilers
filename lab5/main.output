Terminals unused in grammar

   DOT
   POI
   DEC
   OCT
   HEX
   BOOL
   STRUCT
   PRINTF
   SCANCF


State 0 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | assignment SEMICOLON
    7          | expr SEMICOLON
    8          | jump SEMICOLON
    9          | loop
   10          | control

   11 idlist: idlist COMMA ID ASG expr
   12       | idlist COMMA ID
   13       | ID ASG expr
   14       | ID

   15 declaration: type idlist
   16            | CONST type idlist

   17 type: D_BOOL
   18     | D_INT
   19     | D_CHAR
   20     | D_STRING

   21 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN
   22     | WHILE LBRACE expr RBRACE LPAREN statements RPAREN

   23 forcon: statement SEMICOLON expr SEMICOLON assignment

   24 control: IF LBRACE expr RBRACE LPAREN statements RPAREN
   25        | IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

   26 jump: BREAK
   27     | CONTINUE
   28     | RETURN expr
   29     | RETURN

   30 assignment: %empty
   31           | ID ASG expr
   32           | ID ADDASG expr
   33           | ID MINASG expr
   34           | ID MULASG expr
   35           | ID DIVASG expr
   36           | ID MODASG expr
   37           | ADDASGO ID
   38           | MINASGO ID
   39           | ID ADDASGO
   40           | ID MINASGO

   41 expr: expr ADD expr
   42     | expr MIN expr
   43     | expr MUL expr
   44     | expr DIV expr
   45     | expr MOD expr
   46     | expr AND expr
   47     | expr OR expr
   48     | expr GT expr
   49     | expr GTQ expr
   50     | expr LT expr
   51     | expr LTQ expr
   52     | expr NEQ expr
   53     | expr EQU expr
   54     | NOT expr
   55     | ADD expr
   56     | MIN expr
   57     | REF expr
   58     | ID
   59     | INTEGER
   60     | CHAR
   61     | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
ASG (258) 11 13 31
ADDASG (259) 32
MINASG (260) 33
MULASG (261) 34
DIVASG (262) 35
MODASG (263) 36
ADDASGO (264) 37 39
MINASGO (265) 38 40
DOT (266)
REF (267) 57
POI (268)
NOT (269) 54
ADD (270) 41 55
MIN (271) 42 56
MUL (272) 43
DIV (273) 44
MOD (274) 45
EQU (275) 53
GT (276) 48
LT (277) 50
GTQ (278) 49
LTQ (279) 51
NEQ (280) 52
AND (281) 46
OR (282) 47
LBRACE (283) 21 22 24 25
RBRACE (284) 21 22 24 25
LPAREN (285) 21 22 24 25
RPAREN (286) 21 22 24 25
ID (287) 11 12 13 14 31 32 33 34 35 36 37 38 39 40 58
INTEGER (288) 59
DEC (289)
OCT (290)
HEX (291)
CHAR (292) 60
BOOL (293)
STRING (294) 61
D_BOOL (295) 17
D_INT (296) 18
D_CHAR (297) 19
D_STRING (298) 20
CONST (299) 16
STRUCT (300)
IF (301) 24 25
ELSE (302) 25
WHILE (303) 22
FOR (304) 21
RETURN (305) 28 29
CONTINUE (306) 27
BREAK (307) 26
PRINTF (308)
SCANCF (309)
SEMICOLON (310) 4 5 6 7 8 23
COMMA (311) 11 12


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
program (58)
    on left: 1, on right: 0
statements (59)
    on left: 2 3, on right: 1 3 21 22 24 25
statement (60)
    on left: 4 5 6 7 8 9 10, on right: 2 3 23
idlist (61)
    on left: 11 12 13 14, on right: 11 12 15 16
declaration (62)
    on left: 15 16, on right: 5
type (63)
    on left: 17 18 19 20, on right: 15 16
loop (64)
    on left: 21 22, on right: 9
forcon (65)
    on left: 23, on right: 21
control (66)
    on left: 24 25, on right: 10
jump (67)
    on left: 26 27 28 29, on right: 8
assignment (68)
    on left: 30 31 32 33 34 35 36 37 38 39 40, on right: 6 23
expr (69)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61, on right: 7 11 13 22 23 24 25 28 31 32 33 34 35 36 41
    42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57


State 0

    0 $accept: . program $end

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    program      go to state 23
    statements   go to state 24
    statement    go to state 25
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 1

   37 assignment: ADDASGO . ID

    ID  shift, and go to state 33


State 2

   38 assignment: MINASGO . ID

    ID  shift, and go to state 34


State 3

   57 expr: REF . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 36


State 4

   54 expr: NOT . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 37


State 5

   55 expr: ADD . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 38


State 6

   56 expr: MIN . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 39


State 7

   31 assignment: ID . ASG expr
   32           | ID . ADDASG expr
   33           | ID . MINASG expr
   34           | ID . MULASG expr
   35           | ID . DIVASG expr
   36           | ID . MODASG expr
   39           | ID . ADDASGO
   40           | ID . MINASGO
   58 expr: ID .

    ASG      shift, and go to state 40
    ADDASG   shift, and go to state 41
    MINASG   shift, and go to state 42
    MULASG   shift, and go to state 43
    DIVASG   shift, and go to state 44
    MODASG   shift, and go to state 45
    ADDASGO  shift, and go to state 46
    MINASGO  shift, and go to state 47

    $default  reduce using rule 58 (expr)


State 8

   59 expr: INTEGER .

    $default  reduce using rule 59 (expr)


State 9

   60 expr: CHAR .

    $default  reduce using rule 60 (expr)


State 10

   61 expr: STRING .

    $default  reduce using rule 61 (expr)


State 11

   17 type: D_BOOL .

    $default  reduce using rule 17 (type)


State 12

   18 type: D_INT .

    $default  reduce using rule 18 (type)


State 13

   19 type: D_CHAR .

    $default  reduce using rule 19 (type)


State 14

   20 type: D_STRING .

    $default  reduce using rule 20 (type)


State 15

   16 declaration: CONST . type idlist

    D_BOOL    shift, and go to state 11
    D_INT     shift, and go to state 12
    D_CHAR    shift, and go to state 13
    D_STRING  shift, and go to state 14

    type  go to state 48


State 16

   24 control: IF . LBRACE expr RBRACE LPAREN statements RPAREN
   25        | IF . LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LBRACE  shift, and go to state 49


State 17

   22 loop: WHILE . LBRACE expr RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 50


State 18

   21 loop: FOR . LBRACE forcon RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 51


State 19

   28 jump: RETURN . expr
   29     | RETURN .

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    $default  reduce using rule 29 (jump)

    expr  go to state 52


State 20

   27 jump: CONTINUE .

    $default  reduce using rule 27 (jump)


State 21

   26 jump: BREAK .

    $default  reduce using rule 26 (jump)


State 22

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 53


State 24

    1 program: statements .
    3 statements: statements . statement

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]
    $default   reduce using rule 1 (program)

    statement    go to state 54
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 25

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 26

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 27

   15 declaration: type . idlist

    ID  shift, and go to state 56

    idlist  go to state 57


State 28

    9 statement: loop .

    $default  reduce using rule 9 (statement)


State 29

   10 statement: control .

    $default  reduce using rule 10 (statement)


State 30

    8 statement: jump . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 31

    6 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 32

    7 statement: expr . SEMICOLON
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD        shift, and go to state 60
    MIN        shift, and go to state 61
    MUL        shift, and go to state 62
    DIV        shift, and go to state 63
    MOD        shift, and go to state 64
    EQU        shift, and go to state 65
    GT         shift, and go to state 66
    LT         shift, and go to state 67
    GTQ        shift, and go to state 68
    LTQ        shift, and go to state 69
    NEQ        shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72
    SEMICOLON  shift, and go to state 73


State 33

   37 assignment: ADDASGO ID .

    $default  reduce using rule 37 (assignment)


State 34

   38 assignment: MINASGO ID .

    $default  reduce using rule 38 (assignment)


State 35

   58 expr: ID .

    $default  reduce using rule 58 (expr)


State 36

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr
   57     | REF expr .

    $default  reduce using rule 57 (expr)


State 37

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr
   54     | NOT expr .

    $default  reduce using rule 54 (expr)


State 38

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr
   55     | ADD expr .

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 55 (expr)


State 39

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr
   56     | MIN expr .

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 56 (expr)


State 40

   31 assignment: ID ASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 74


State 41

   32 assignment: ID ADDASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 75


State 42

   33 assignment: ID MINASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 76


State 43

   34 assignment: ID MULASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 77


State 44

   35 assignment: ID DIVASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 78


State 45

   36 assignment: ID MODASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 79


State 46

   39 assignment: ID ADDASGO .

    $default  reduce using rule 39 (assignment)


State 47

   40 assignment: ID MINASGO .

    $default  reduce using rule 40 (assignment)


State 48

   16 declaration: CONST type . idlist

    ID  shift, and go to state 56

    idlist  go to state 80


State 49

   24 control: IF LBRACE . expr RBRACE LPAREN statements RPAREN
   25        | IF LBRACE . expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 81


State 50

   22 loop: WHILE LBRACE . expr RBRACE LPAREN statements RPAREN

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 82


State 51

   21 loop: FOR LBRACE . forcon RBRACE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statement    go to state 83
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    forcon       go to state 84
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 52

   28 jump: RETURN expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 28 (jump)


State 53

    0 $accept: program $end .

    $default  accept


State 54

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 55

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 56

   13 idlist: ID . ASG expr
   14       | ID .

    ASG  shift, and go to state 85

    $default  reduce using rule 14 (idlist)


State 57

   11 idlist: idlist . COMMA ID ASG expr
   12       | idlist . COMMA ID
   15 declaration: type idlist .

    COMMA  shift, and go to state 86

    $default  reduce using rule 15 (declaration)


State 58

    8 statement: jump SEMICOLON .

    $default  reduce using rule 8 (statement)


State 59

    6 statement: assignment SEMICOLON .

    $default  reduce using rule 6 (statement)


State 60

   41 expr: expr ADD . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 87


State 61

   42 expr: expr MIN . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 88


State 62

   43 expr: expr MUL . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 89


State 63

   44 expr: expr DIV . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 90


State 64

   45 expr: expr MOD . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 91


State 65

   53 expr: expr EQU . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 92


State 66

   48 expr: expr GT . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 93


State 67

   50 expr: expr LT . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 94


State 68

   49 expr: expr GTQ . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 95


State 69

   51 expr: expr LTQ . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 96


State 70

   52 expr: expr NEQ . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 97


State 71

   46 expr: expr AND . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 98


State 72

   47 expr: expr OR . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 99


State 73

    7 statement: expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 74

   31 assignment: ID ASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 31 (assignment)


State 75

   32 assignment: ID ADDASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 32 (assignment)


State 76

   33 assignment: ID MINASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 33 (assignment)


State 77

   34 assignment: ID MULASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 34 (assignment)


State 78

   35 assignment: ID DIVASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 35 (assignment)


State 79

   36 assignment: ID MODASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 36 (assignment)


State 80

   11 idlist: idlist . COMMA ID ASG expr
   12       | idlist . COMMA ID
   16 declaration: CONST type idlist .

    COMMA  shift, and go to state 86

    $default  reduce using rule 16 (declaration)


State 81

   24 control: IF LBRACE expr . RBRACE LPAREN statements RPAREN
   25        | IF LBRACE expr . RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD     shift, and go to state 60
    MIN     shift, and go to state 61
    MUL     shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    EQU     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    GTQ     shift, and go to state 68
    LTQ     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 71
    OR      shift, and go to state 72
    RBRACE  shift, and go to state 100


State 82

   22 loop: WHILE LBRACE expr . RBRACE LPAREN statements RPAREN
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD     shift, and go to state 60
    MIN     shift, and go to state 61
    MUL     shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    EQU     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    GTQ     shift, and go to state 68
    LTQ     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 71
    OR      shift, and go to state 72
    RBRACE  shift, and go to state 101


State 83

   23 forcon: statement . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 102


State 84

   21 loop: FOR LBRACE forcon . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 103


State 85

   13 idlist: ID ASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 104


State 86

   11 idlist: idlist COMMA . ID ASG expr
   12       | idlist COMMA . ID

    ID  shift, and go to state 105


State 87

   41 expr: expr . ADD expr
   41     | expr ADD expr .
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 41 (expr)


State 88

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   42     | expr MIN expr .
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 42 (expr)


State 89

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   43     | expr MUL expr .
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    $default  reduce using rule 43 (expr)


State 90

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   44     | expr DIV expr .
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    $default  reduce using rule 44 (expr)


State 91

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   45     | expr MOD expr .
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    $default  reduce using rule 45 (expr)


State 92

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr
   53     | expr EQU expr .

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 53 (expr)


State 93

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   48     | expr GT expr .
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 48 (expr)


State 94

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   50     | expr LT expr .
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 50 (expr)


State 95

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   49     | expr GTQ expr .
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 49 (expr)


State 96

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   51     | expr LTQ expr .
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 51 (expr)


State 97

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   52     | expr NEQ expr .
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 52 (expr)


State 98

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   46     | expr AND expr .
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70

    $default  reduce using rule 46 (expr)


State 99

   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   47     | expr OR expr .
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70

    $default  reduce using rule 47 (expr)


State 100

   24 control: IF LBRACE expr RBRACE . LPAREN statements RPAREN
   25        | IF LBRACE expr RBRACE . LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LPAREN  shift, and go to state 106


State 101

   22 loop: WHILE LBRACE expr RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 107


State 102

   23 forcon: statement SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 108


State 103

   21 loop: FOR LBRACE forcon RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 109


State 104

   13 idlist: ID ASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 13 (idlist)


State 105

   11 idlist: idlist COMMA ID . ASG expr
   12       | idlist COMMA ID .

    ASG  shift, and go to state 110

    $default  reduce using rule 12 (idlist)


State 106

   24 control: IF LBRACE expr RBRACE LPAREN . statements RPAREN
   25        | IF LBRACE expr RBRACE LPAREN . statements RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statements   go to state 111
    statement    go to state 25
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 107

   22 loop: WHILE LBRACE expr RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statements   go to state 112
    statement    go to state 25
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 108

   23 forcon: statement SEMICOLON expr . SEMICOLON assignment
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD        shift, and go to state 60
    MIN        shift, and go to state 61
    MUL        shift, and go to state 62
    DIV        shift, and go to state 63
    MOD        shift, and go to state 64
    EQU        shift, and go to state 65
    GT         shift, and go to state 66
    LT         shift, and go to state 67
    GTQ        shift, and go to state 68
    LTQ        shift, and go to state 69
    NEQ        shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72
    SEMICOLON  shift, and go to state 113


State 109

   21 loop: FOR LBRACE forcon RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statements   go to state 114
    statement    go to state 25
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 110

   11 idlist: idlist COMMA ID ASG . expr

    REF      shift, and go to state 3
    NOT      shift, and go to state 4
    ADD      shift, and go to state 5
    MIN      shift, and go to state 6
    ID       shift, and go to state 35
    INTEGER  shift, and go to state 8
    CHAR     shift, and go to state 9
    STRING   shift, and go to state 10

    expr  go to state 115


State 111

    3 statements: statements . statement
   24 control: IF LBRACE expr RBRACE LPAREN statements . RPAREN
   25        | IF LBRACE expr RBRACE LPAREN statements . RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 116
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statement    go to state 54
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 112

    3 statements: statements . statement
   22 loop: WHILE LBRACE expr RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 117
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statement    go to state 54
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 113

   23 forcon: statement SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 118

    $default  reduce using rule 30 (assignment)

    assignment  go to state 119


State 114

    3 statements: statements . statement
   21 loop: FOR LBRACE forcon RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 120
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statement    go to state 54
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 115

   11 idlist: idlist COMMA ID ASG expr .
   41 expr: expr . ADD expr
   42     | expr . MIN expr
   43     | expr . MUL expr
   44     | expr . DIV expr
   45     | expr . MOD expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . GT expr
   49     | expr . GTQ expr
   50     | expr . LT expr
   51     | expr . LTQ expr
   52     | expr . NEQ expr
   53     | expr . EQU expr

    ADD  shift, and go to state 60
    MIN  shift, and go to state 61
    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64
    EQU  shift, and go to state 65
    GT   shift, and go to state 66
    LT   shift, and go to state 67
    GTQ  shift, and go to state 68
    LTQ  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 11 (idlist)


State 116

   24 control: IF LBRACE expr RBRACE LPAREN statements RPAREN .
   25        | IF LBRACE expr RBRACE LPAREN statements RPAREN . ELSE LPAREN statements RPAREN

    ELSE  shift, and go to state 121

    $default  reduce using rule 24 (control)


State 117

   22 loop: WHILE LBRACE expr RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 22 (loop)


State 118

   31 assignment: ID . ASG expr
   32           | ID . ADDASG expr
   33           | ID . MINASG expr
   34           | ID . MULASG expr
   35           | ID . DIVASG expr
   36           | ID . MODASG expr
   39           | ID . ADDASGO
   40           | ID . MINASGO

    ASG      shift, and go to state 40
    ADDASG   shift, and go to state 41
    MINASG   shift, and go to state 42
    MULASG   shift, and go to state 43
    DIVASG   shift, and go to state 44
    MODASG   shift, and go to state 45
    ADDASGO  shift, and go to state 46
    MINASGO  shift, and go to state 47


State 119

   23 forcon: statement SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 23 (forcon)


State 120

   21 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 21 (loop)


State 121

   25 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 122


State 122

   25 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statements   go to state 123
    statement    go to state 25
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 123

    3 statements: statements . statement
   25 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    REF        shift, and go to state 3
    NOT        shift, and go to state 4
    ADD        shift, and go to state 5
    MIN        shift, and go to state 6
    RPAREN     shift, and go to state 124
    ID         shift, and go to state 7
    INTEGER    shift, and go to state 8
    CHAR       shift, and go to state 9
    STRING     shift, and go to state 10
    D_BOOL     shift, and go to state 11
    D_INT      shift, and go to state 12
    D_CHAR     shift, and go to state 13
    D_STRING   shift, and go to state 14
    CONST      shift, and go to state 15
    IF         shift, and go to state 16
    WHILE      shift, and go to state 17
    FOR        shift, and go to state 18
    RETURN     shift, and go to state 19
    CONTINUE   shift, and go to state 20
    BREAK      shift, and go to state 21
    SEMICOLON  shift, and go to state 22

    SEMICOLON  [reduce using rule 30 (assignment)]

    statement    go to state 54
    declaration  go to state 26
    type         go to state 27
    loop         go to state 28
    control      go to state 29
    jump         go to state 30
    assignment   go to state 31
    expr         go to state 32


State 124

   25 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN .

    $default  reduce using rule 25 (control)
