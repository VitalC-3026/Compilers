Terminals unused in grammar

   DOT
   POI
   DEC
   OCT
   HEX
   BOOL
   STRUCT


State 0 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | assignment SEMICOLON
    7          | jump SEMICOLON
    8          | loop
    9          | control
   10          | function

   11 function: functionDecl SEMICOLON
   12         | functionCall SEMICOLON
   13         | functionDefi

   14 functionDefi: type MAIN LBRACE RBRACE LPAREN statements RPAREN

   15 functionDecl: type ID LBRACE RBRACE

   16 functionCall: SCANF LBRACE STRING scanfIdlist RBRACE
   17             | PRINTF LBRACE STRING printfIdlist RBRACE
   18             | ID LBRACE paramList RBRACE

   19 paramList: paramList COMMA expr
   20          | expr
   21          | %empty

   22 scanfIdlist: scanfIdlist COMMA REF ID
   23            | COMMA REF ID

   24 printfIdlist: printfIdlist COMMA ID
   25             | COMMA ID

   26 idlist: idlist COMMA ID ASG expr
   27       | idlist COMMA ID
   28       | ID ASG expr
   29       | ID

   30 declaration: type idlist
   31            | CONST type idlist

   32 type: T_BOOL
   33     | T_INT
   34     | T_CHAR
   35     | T_STRING
   36     | T_VOID

   37 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN
   38     | WHILE LBRACE expr RBRACE LPAREN statements RPAREN

   39 forcon: declaration SEMICOLON expr SEMICOLON assignment
   40       | assignment SEMICOLON expr SEMICOLON assignment

   41 control: IF LBRACE expr RBRACE LPAREN statements RPAREN
   42        | IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

   43 jump: BREAK
   44     | CONTINUE
   45     | RETURN expr
   46     | RETURN

   47 assignment: %empty
   48           | ID ASG expr
   49           | ID ADDASG expr
   50           | ID MINASG expr
   51           | ID MULASG expr
   52           | ID DIVASG expr
   53           | ID MODASG expr
   54           | ADDASGO ID
   55           | MINASGO ID
   56           | ID ADDASGO
   57           | ID MINASGO

   58 expr: expr ADD expr
   59     | expr MIN expr
   60     | expr MUL expr
   61     | expr DIV expr
   62     | expr MOD expr
   63     | expr AND expr
   64     | expr OR expr
   65     | expr GT expr
   66     | expr GTQ expr
   67     | expr LT expr
   68     | expr LTQ expr
   69     | expr NEQ expr
   70     | expr EQU expr
   71     | NOT expr
   72     | ADD expr
   73     | MIN expr
   74     | REF expr
   75     | ID
   76     | INTEGER
   77     | CHAR
   78     | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
ASG (258) 26 28 48
ADDASG (259) 49
MINASG (260) 50
MULASG (261) 51
DIVASG (262) 52
MODASG (263) 53
ADDASGO (264) 54 56
MINASGO (265) 55 57
DOT (266)
REF (267) 22 23 74
POI (268)
NOT (269) 71
ADD (270) 58 72
MIN (271) 59 73
MUL (272) 60
DIV (273) 61
MOD (274) 62
EQU (275) 70
GT (276) 65
LT (277) 67
GTQ (278) 66
LTQ (279) 68
NEQ (280) 69
AND (281) 63
OR (282) 64
LBRACE (283) 14 15 16 17 18 37 38 41 42
RBRACE (284) 14 15 16 17 18 37 38 41 42
LPAREN (285) 14 37 38 41 42
RPAREN (286) 14 37 38 41 42
ID (287) 15 18 22 23 24 25 26 27 28 29 48 49 50 51 52 53 54 55 56 57
    75
INTEGER (288) 76
MAIN (289) 14
DEC (290)
OCT (291)
HEX (292)
CHAR (293) 77
BOOL (294)
STRING (295) 16 17 78
T_BOOL (296) 32
T_INT (297) 33
T_CHAR (298) 34
T_STRING (299) 35
T_VOID (300) 36
CONST (301) 31
STRUCT (302)
IF (303) 41 42
ELSE (304) 42
WHILE (305) 38
FOR (306) 37
RETURN (307) 45 46
CONTINUE (308) 44
BREAK (309) 43
PRINTF (310) 17
SCANF (311) 16
SEMICOLON (312) 4 5 6 7 11 12 39 40
COMMA (313) 19 22 23 24 25 26 27


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
statements (61)
    on left: 2 3, on right: 1 3 14 37 38 41 42
statement (62)
    on left: 4 5 6 7 8 9 10, on right: 2 3
function (63)
    on left: 11 12 13, on right: 10
functionDefi (64)
    on left: 14, on right: 13
functionDecl (65)
    on left: 15, on right: 11
functionCall (66)
    on left: 16 17 18, on right: 12
paramList (67)
    on left: 19 20 21, on right: 18 19
scanfIdlist (68)
    on left: 22 23, on right: 16 22
printfIdlist (69)
    on left: 24 25, on right: 17 24
idlist (70)
    on left: 26 27 28 29, on right: 26 27 30 31
declaration (71)
    on left: 30 31, on right: 5 39
type (72)
    on left: 32 33 34 35 36, on right: 14 15 30 31
loop (73)
    on left: 37 38, on right: 8
forcon (74)
    on left: 39 40, on right: 37
control (75)
    on left: 41 42, on right: 9
jump (76)
    on left: 43 44 45 46, on right: 7
assignment (77)
    on left: 47 48 49 50 51 52 53 54 55 56 57, on right: 6 39 40
expr (78)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78, on right: 19 20 26 28 38 39 40 41 42 45 48 49 50 51 52
    53 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74


State 0

    0 $accept: . program $end

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    program       go to state 19
    statements    go to state 20
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 1

   54 assignment: ADDASGO . ID

    ID  shift, and go to state 32


State 2

   55 assignment: MINASGO . ID

    ID  shift, and go to state 33


State 3

   18 functionCall: ID . LBRACE paramList RBRACE
   48 assignment: ID . ASG expr
   49           | ID . ADDASG expr
   50           | ID . MINASG expr
   51           | ID . MULASG expr
   52           | ID . DIVASG expr
   53           | ID . MODASG expr
   56           | ID . ADDASGO
   57           | ID . MINASGO

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41
    LBRACE   shift, and go to state 42


State 4

   32 type: T_BOOL .

    $default  reduce using rule 32 (type)


State 5

   33 type: T_INT .

    $default  reduce using rule 33 (type)


State 6

   34 type: T_CHAR .

    $default  reduce using rule 34 (type)


State 7

   35 type: T_STRING .

    $default  reduce using rule 35 (type)


State 8

   36 type: T_VOID .

    $default  reduce using rule 36 (type)


State 9

   31 declaration: CONST . type idlist

    T_BOOL    shift, and go to state 4
    T_INT     shift, and go to state 5
    T_CHAR    shift, and go to state 6
    T_STRING  shift, and go to state 7
    T_VOID    shift, and go to state 8

    type  go to state 43


State 10

   41 control: IF . LBRACE expr RBRACE LPAREN statements RPAREN
   42        | IF . LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LBRACE  shift, and go to state 44


State 11

   38 loop: WHILE . LBRACE expr RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 45


State 12

   37 loop: FOR . LBRACE forcon RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 46


State 13

   45 jump: RETURN . expr
   46     | RETURN .

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    $default  reduce using rule 46 (jump)

    expr  go to state 55


State 14

   44 jump: CONTINUE .

    $default  reduce using rule 44 (jump)


State 15

   43 jump: BREAK .

    $default  reduce using rule 43 (jump)


State 16

   17 functionCall: PRINTF . LBRACE STRING printfIdlist RBRACE

    LBRACE  shift, and go to state 56


State 17

   16 functionCall: SCANF . LBRACE STRING scanfIdlist RBRACE

    LBRACE  shift, and go to state 57


State 18

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 19

    0 $accept: program . $end

    $end  shift, and go to state 58


State 20

    1 program: statements .
    3 statements: statements . statement

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]
    $default   reduce using rule 1 (program)

    statement     go to state 59
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

   10 statement: function .

    $default  reduce using rule 10 (statement)


State 23

   13 function: functionDefi .

    $default  reduce using rule 13 (function)


State 24

   11 function: functionDecl . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 25

   12 function: functionCall . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 26

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 27

   14 functionDefi: type . MAIN LBRACE RBRACE LPAREN statements RPAREN
   15 functionDecl: type . ID LBRACE RBRACE
   30 declaration: type . idlist

    ID    shift, and go to state 63
    MAIN  shift, and go to state 64

    idlist  go to state 65


State 28

    8 statement: loop .

    $default  reduce using rule 8 (statement)


State 29

    9 statement: control .

    $default  reduce using rule 9 (statement)


State 30

    7 statement: jump . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 31

    6 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 32

   54 assignment: ADDASGO ID .

    $default  reduce using rule 54 (assignment)


State 33

   55 assignment: MINASGO ID .

    $default  reduce using rule 55 (assignment)


State 34

   48 assignment: ID ASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 68


State 35

   49 assignment: ID ADDASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 69


State 36

   50 assignment: ID MINASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 70


State 37

   51 assignment: ID MULASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 71


State 38

   52 assignment: ID DIVASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 72


State 39

   53 assignment: ID MODASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 73


State 40

   56 assignment: ID ADDASGO .

    $default  reduce using rule 56 (assignment)


State 41

   57 assignment: ID MINASGO .

    $default  reduce using rule 57 (assignment)


State 42

   18 functionCall: ID LBRACE . paramList RBRACE

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    $default  reduce using rule 21 (paramList)

    paramList  go to state 74
    expr       go to state 75


State 43

   31 declaration: CONST type . idlist

    ID  shift, and go to state 76

    idlist  go to state 77


State 44

   41 control: IF LBRACE . expr RBRACE LPAREN statements RPAREN
   42        | IF LBRACE . expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 78


State 45

   38 loop: WHILE LBRACE . expr RBRACE LPAREN statements RPAREN

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 79


State 46

   37 loop: FOR LBRACE . forcon RBRACE LPAREN statements RPAREN

    ADDASGO   shift, and go to state 1
    MINASGO   shift, and go to state 2
    ID        shift, and go to state 80
    T_BOOL    shift, and go to state 4
    T_INT     shift, and go to state 5
    T_CHAR    shift, and go to state 6
    T_STRING  shift, and go to state 7
    T_VOID    shift, and go to state 8
    CONST     shift, and go to state 9

    $default  reduce using rule 47 (assignment)

    declaration  go to state 81
    type         go to state 82
    forcon       go to state 83
    assignment   go to state 84


State 47

   74 expr: REF . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 85


State 48

   71 expr: NOT . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 86


State 49

   72 expr: ADD . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 87


State 50

   73 expr: MIN . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 88


State 51

   75 expr: ID .

    $default  reduce using rule 75 (expr)


State 52

   76 expr: INTEGER .

    $default  reduce using rule 76 (expr)


State 53

   77 expr: CHAR .

    $default  reduce using rule 77 (expr)


State 54

   78 expr: STRING .

    $default  reduce using rule 78 (expr)


State 55

   45 jump: RETURN expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 45 (jump)


State 56

   17 functionCall: PRINTF LBRACE . STRING printfIdlist RBRACE

    STRING  shift, and go to state 102


State 57

   16 functionCall: SCANF LBRACE . STRING scanfIdlist RBRACE

    STRING  shift, and go to state 103


State 58

    0 $accept: program $end .

    $default  accept


State 59

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 60

   11 function: functionDecl SEMICOLON .

    $default  reduce using rule 11 (function)


State 61

   12 function: functionCall SEMICOLON .

    $default  reduce using rule 12 (function)


State 62

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 63

   15 functionDecl: type ID . LBRACE RBRACE
   28 idlist: ID . ASG expr
   29       | ID .

    ASG     shift, and go to state 104
    LBRACE  shift, and go to state 105

    $default  reduce using rule 29 (idlist)


State 64

   14 functionDefi: type MAIN . LBRACE RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 106


State 65

   26 idlist: idlist . COMMA ID ASG expr
   27       | idlist . COMMA ID
   30 declaration: type idlist .

    COMMA  shift, and go to state 107

    $default  reduce using rule 30 (declaration)


State 66

    7 statement: jump SEMICOLON .

    $default  reduce using rule 7 (statement)


State 67

    6 statement: assignment SEMICOLON .

    $default  reduce using rule 6 (statement)


State 68

   48 assignment: ID ASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 48 (assignment)


State 69

   49 assignment: ID ADDASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 49 (assignment)


State 70

   50 assignment: ID MINASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 50 (assignment)


State 71

   51 assignment: ID MULASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 51 (assignment)


State 72

   52 assignment: ID DIVASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 52 (assignment)


State 73

   53 assignment: ID MODASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 53 (assignment)


State 74

   18 functionCall: ID LBRACE paramList . RBRACE
   19 paramList: paramList . COMMA expr

    RBRACE  shift, and go to state 108
    COMMA   shift, and go to state 109


State 75

   20 paramList: expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 20 (paramList)


State 76

   28 idlist: ID . ASG expr
   29       | ID .

    ASG  shift, and go to state 104

    $default  reduce using rule 29 (idlist)


State 77

   26 idlist: idlist . COMMA ID ASG expr
   27       | idlist . COMMA ID
   31 declaration: CONST type idlist .

    COMMA  shift, and go to state 107

    $default  reduce using rule 31 (declaration)


State 78

   41 control: IF LBRACE expr . RBRACE LPAREN statements RPAREN
   42        | IF LBRACE expr . RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD     shift, and go to state 89
    MIN     shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EQU     shift, and go to state 94
    GT      shift, and go to state 95
    LT      shift, and go to state 96
    GTQ     shift, and go to state 97
    LTQ     shift, and go to state 98
    NEQ     shift, and go to state 99
    AND     shift, and go to state 100
    OR      shift, and go to state 101
    RBRACE  shift, and go to state 110


State 79

   38 loop: WHILE LBRACE expr . RBRACE LPAREN statements RPAREN
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD     shift, and go to state 89
    MIN     shift, and go to state 90
    MUL     shift, and go to state 91
    DIV     shift, and go to state 92
    MOD     shift, and go to state 93
    EQU     shift, and go to state 94
    GT      shift, and go to state 95
    LT      shift, and go to state 96
    GTQ     shift, and go to state 97
    LTQ     shift, and go to state 98
    NEQ     shift, and go to state 99
    AND     shift, and go to state 100
    OR      shift, and go to state 101
    RBRACE  shift, and go to state 111


State 80

   48 assignment: ID . ASG expr
   49           | ID . ADDASG expr
   50           | ID . MINASG expr
   51           | ID . MULASG expr
   52           | ID . DIVASG expr
   53           | ID . MODASG expr
   56           | ID . ADDASGO
   57           | ID . MINASGO

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41


State 81

   39 forcon: declaration . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 112


State 82

   30 declaration: type . idlist

    ID  shift, and go to state 76

    idlist  go to state 65


State 83

   37 loop: FOR LBRACE forcon . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 113


State 84

   40 forcon: assignment . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 114


State 85

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr
   74     | REF expr .

    $default  reduce using rule 74 (expr)


State 86

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr
   71     | NOT expr .

    $default  reduce using rule 71 (expr)


State 87

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr
   72     | ADD expr .

    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 72 (expr)


State 88

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr
   73     | MIN expr .

    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 73 (expr)


State 89

   58 expr: expr ADD . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 115


State 90

   59 expr: expr MIN . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 116


State 91

   60 expr: expr MUL . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 117


State 92

   61 expr: expr DIV . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 118


State 93

   62 expr: expr MOD . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 119


State 94

   70 expr: expr EQU . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 120


State 95

   65 expr: expr GT . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 121


State 96

   67 expr: expr LT . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 122


State 97

   66 expr: expr GTQ . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 123


State 98

   68 expr: expr LTQ . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 124


State 99

   69 expr: expr NEQ . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 125


State 100

   63 expr: expr AND . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 126


State 101

   64 expr: expr OR . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 127


State 102

   17 functionCall: PRINTF LBRACE STRING . printfIdlist RBRACE

    COMMA  shift, and go to state 128

    printfIdlist  go to state 129


State 103

   16 functionCall: SCANF LBRACE STRING . scanfIdlist RBRACE

    COMMA  shift, and go to state 130

    scanfIdlist  go to state 131


State 104

   28 idlist: ID ASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 132


State 105

   15 functionDecl: type ID LBRACE . RBRACE

    RBRACE  shift, and go to state 133


State 106

   14 functionDefi: type MAIN LBRACE . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 134


State 107

   26 idlist: idlist COMMA . ID ASG expr
   27       | idlist COMMA . ID

    ID  shift, and go to state 135


State 108

   18 functionCall: ID LBRACE paramList RBRACE .

    $default  reduce using rule 18 (functionCall)


State 109

   19 paramList: paramList COMMA . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 136


State 110

   41 control: IF LBRACE expr RBRACE . LPAREN statements RPAREN
   42        | IF LBRACE expr RBRACE . LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LPAREN  shift, and go to state 137


State 111

   38 loop: WHILE LBRACE expr RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 138


State 112

   39 forcon: declaration SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 139


State 113

   37 loop: FOR LBRACE forcon RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 140


State 114

   40 forcon: assignment SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 141


State 115

   58 expr: expr . ADD expr
   58     | expr ADD expr .
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 58 (expr)


State 116

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   59     | expr MIN expr .
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 59 (expr)


State 117

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   60     | expr MUL expr .
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    $default  reduce using rule 60 (expr)


State 118

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   61     | expr DIV expr .
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    $default  reduce using rule 61 (expr)


State 119

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   62     | expr MOD expr .
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    $default  reduce using rule 62 (expr)


State 120

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr
   70     | expr EQU expr .

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 70 (expr)


State 121

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   65     | expr GT expr .
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 65 (expr)


State 122

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   67     | expr LT expr .
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 67 (expr)


State 123

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   66     | expr GTQ expr .
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 66 (expr)


State 124

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   68     | expr LTQ expr .
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 68 (expr)


State 125

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   69     | expr NEQ expr .
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93

    $default  reduce using rule 69 (expr)


State 126

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   63     | expr AND expr .
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99

    $default  reduce using rule 63 (expr)


State 127

   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   64     | expr OR expr .
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99

    $default  reduce using rule 64 (expr)


State 128

   25 printfIdlist: COMMA . ID

    ID  shift, and go to state 142


State 129

   17 functionCall: PRINTF LBRACE STRING printfIdlist . RBRACE
   24 printfIdlist: printfIdlist . COMMA ID

    RBRACE  shift, and go to state 143
    COMMA   shift, and go to state 144


State 130

   23 scanfIdlist: COMMA . REF ID

    REF  shift, and go to state 145


State 131

   16 functionCall: SCANF LBRACE STRING scanfIdlist . RBRACE
   22 scanfIdlist: scanfIdlist . COMMA REF ID

    RBRACE  shift, and go to state 146
    COMMA   shift, and go to state 147


State 132

   28 idlist: ID ASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 28 (idlist)


State 133

   15 functionDecl: type ID LBRACE RBRACE .

    $default  reduce using rule 15 (functionDecl)


State 134

   14 functionDefi: type MAIN LBRACE RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 148


State 135

   26 idlist: idlist COMMA ID . ASG expr
   27       | idlist COMMA ID .

    ASG  shift, and go to state 149

    $default  reduce using rule 27 (idlist)


State 136

   19 paramList: paramList COMMA expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 19 (paramList)


State 137

   41 control: IF LBRACE expr RBRACE LPAREN . statements RPAREN
   42        | IF LBRACE expr RBRACE LPAREN . statements RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statements    go to state 150
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 138

   38 loop: WHILE LBRACE expr RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statements    go to state 151
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 139

   39 forcon: declaration SEMICOLON expr . SEMICOLON assignment
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD        shift, and go to state 89
    MIN        shift, and go to state 90
    MUL        shift, and go to state 91
    DIV        shift, and go to state 92
    MOD        shift, and go to state 93
    EQU        shift, and go to state 94
    GT         shift, and go to state 95
    LT         shift, and go to state 96
    GTQ        shift, and go to state 97
    LTQ        shift, and go to state 98
    NEQ        shift, and go to state 99
    AND        shift, and go to state 100
    OR         shift, and go to state 101
    SEMICOLON  shift, and go to state 152


State 140

   37 loop: FOR LBRACE forcon RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statements    go to state 153
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 141

   40 forcon: assignment SEMICOLON expr . SEMICOLON assignment
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD        shift, and go to state 89
    MIN        shift, and go to state 90
    MUL        shift, and go to state 91
    DIV        shift, and go to state 92
    MOD        shift, and go to state 93
    EQU        shift, and go to state 94
    GT         shift, and go to state 95
    LT         shift, and go to state 96
    GTQ        shift, and go to state 97
    LTQ        shift, and go to state 98
    NEQ        shift, and go to state 99
    AND        shift, and go to state 100
    OR         shift, and go to state 101
    SEMICOLON  shift, and go to state 154


State 142

   25 printfIdlist: COMMA ID .

    $default  reduce using rule 25 (printfIdlist)


State 143

   17 functionCall: PRINTF LBRACE STRING printfIdlist RBRACE .

    $default  reduce using rule 17 (functionCall)


State 144

   24 printfIdlist: printfIdlist COMMA . ID

    ID  shift, and go to state 155


State 145

   23 scanfIdlist: COMMA REF . ID

    ID  shift, and go to state 156


State 146

   16 functionCall: SCANF LBRACE STRING scanfIdlist RBRACE .

    $default  reduce using rule 16 (functionCall)


State 147

   22 scanfIdlist: scanfIdlist COMMA . REF ID

    REF  shift, and go to state 157


State 148

   14 functionDefi: type MAIN LBRACE RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statements    go to state 158
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 149

   26 idlist: idlist COMMA ID ASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    ID       shift, and go to state 51
    INTEGER  shift, and go to state 52
    CHAR     shift, and go to state 53
    STRING   shift, and go to state 54

    expr  go to state 159


State 150

    3 statements: statements . statement
   41 control: IF LBRACE expr RBRACE LPAREN statements . RPAREN
   42        | IF LBRACE expr RBRACE LPAREN statements . RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 160
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statement     go to state 59
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 151

    3 statements: statements . statement
   38 loop: WHILE LBRACE expr RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 161
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statement     go to state 59
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 152

   39 forcon: declaration SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 80

    $default  reduce using rule 47 (assignment)

    assignment  go to state 162


State 153

    3 statements: statements . statement
   37 loop: FOR LBRACE forcon RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 163
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statement     go to state 59
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 154

   40 forcon: assignment SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 80

    $default  reduce using rule 47 (assignment)

    assignment  go to state 164


State 155

   24 printfIdlist: printfIdlist COMMA ID .

    $default  reduce using rule 24 (printfIdlist)


State 156

   23 scanfIdlist: COMMA REF ID .

    $default  reduce using rule 23 (scanfIdlist)


State 157

   22 scanfIdlist: scanfIdlist COMMA REF . ID

    ID  shift, and go to state 165


State 158

    3 statements: statements . statement
   14 functionDefi: type MAIN LBRACE RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 166
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statement     go to state 59
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 159

   26 idlist: idlist COMMA ID ASG expr .
   58 expr: expr . ADD expr
   59     | expr . MIN expr
   60     | expr . MUL expr
   61     | expr . DIV expr
   62     | expr . MOD expr
   63     | expr . AND expr
   64     | expr . OR expr
   65     | expr . GT expr
   66     | expr . GTQ expr
   67     | expr . LT expr
   68     | expr . LTQ expr
   69     | expr . NEQ expr
   70     | expr . EQU expr

    ADD  shift, and go to state 89
    MIN  shift, and go to state 90
    MUL  shift, and go to state 91
    DIV  shift, and go to state 92
    MOD  shift, and go to state 93
    EQU  shift, and go to state 94
    GT   shift, and go to state 95
    LT   shift, and go to state 96
    GTQ  shift, and go to state 97
    LTQ  shift, and go to state 98
    NEQ  shift, and go to state 99
    AND  shift, and go to state 100
    OR   shift, and go to state 101

    $default  reduce using rule 26 (idlist)


State 160

   41 control: IF LBRACE expr RBRACE LPAREN statements RPAREN .
   42        | IF LBRACE expr RBRACE LPAREN statements RPAREN . ELSE LPAREN statements RPAREN

    ELSE  shift, and go to state 167

    $default  reduce using rule 41 (control)


State 161

   38 loop: WHILE LBRACE expr RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 38 (loop)


State 162

   39 forcon: declaration SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 39 (forcon)


State 163

   37 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 37 (loop)


State 164

   40 forcon: assignment SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 40 (forcon)


State 165

   22 scanfIdlist: scanfIdlist COMMA REF ID .

    $default  reduce using rule 22 (scanfIdlist)


State 166

   14 functionDefi: type MAIN LBRACE RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 14 (functionDefi)


State 167

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 168


State 168

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statements    go to state 169
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 169

    3 statements: statements . statement
   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 170
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 47 (assignment)]

    statement     go to state 59
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 170

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN .

    $default  reduce using rule 42 (control)
