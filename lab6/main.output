Terminals unused in grammar

   DOT
   POI
   DEC
   OCT
   HEX
   BOOL
   STRUCT


State 0 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 179 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | assignment SEMICOLON
    7          | jump SEMICOLON
    8          | loop
    9          | control
   10          | function

   11 function: functionDecl SEMICOLON
   12         | functionCall SEMICOLON
   13         | functionDefi

   14 functionDefi: type MAIN LBRACE RBRACE LPAREN statements RPAREN

   15 functionDecl: type ID LBRACE RBRACE

   16 functionCall: SCANF LBRACE STRING scanfIdlist RBRACE
   17             | PRINTF LBRACE STRING RBRACE
   18             | PRINTF LBRACE STRING printfIdlist RBRACE
   19             | ID LBRACE paramList RBRACE

   20 paramList: paramList COMMA expr
   21          | expr
   22          | %empty

   23 scanfIdlist: scanfIdlist COMMA REF ID
   24            | COMMA REF ID

   25 printfIdlist: printfIdlist COMMA ID
   26             | COMMA ID

   27 idlist: idlist COMMA ID ASG expr
   28       | idlist COMMA ID
   29       | ID ASG expr
   30       | ID

   31 declaration: type idlist
   32            | CONST type idlist

   33 type: T_BOOL
   34     | T_INT
   35     | T_CHAR
   36     | T_STRING
   37     | T_VOID

   38 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN
   39     | WHILE LBRACE expr RBRACE LPAREN statements RPAREN

   40 forcon: declaration SEMICOLON expr SEMICOLON assignment
   41       | assignment SEMICOLON expr SEMICOLON assignment

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE control
   43        | IF LBRACE expr RBRACE LPAREN statements RPAREN
   44        | IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

   45 jump: BREAK
   46     | CONTINUE
   47     | RETURN expr
   48     | RETURN

   49 assignment: %empty
   50           | ID ASG assignment
   51           | ID ADDASG assignment
   52           | ID MINASG assignment
   53           | ID MULASG assignment
   54           | ID DIVASG assignment
   55           | ID MODASG assignment
   56           | ID ASG expr
   57           | ID ADDASG expr
   58           | ID MINASG expr
   59           | ID MULASG expr
   60           | ID DIVASG expr
   61           | ID MODASG expr
   62           | ADDASGO ID
   63           | MINASGO ID
   64           | ID ADDASGO
   65           | ID MINASGO

   66 expr: expr ADD expr
   67     | expr MIN expr
   68     | expr MUL expr
   69     | expr DIV expr
   70     | expr MOD expr
   71     | expr AND expr
   72     | expr OR expr
   73     | expr GT expr
   74     | expr GTQ expr
   75     | expr LT expr
   76     | expr LTQ expr
   77     | expr NEQ expr
   78     | expr EQU expr
   79     | NOT expr
   80     | ADD expr
   81     | MIN expr
   82     | REF expr
   83     | LBRACE expr RBRACE
   84     | ID
   85     | INTEGER
   86     | CHAR
   87     | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
ASG (258) 27 29 50 56
ADDASG (259) 51 57
MINASG (260) 52 58
MULASG (261) 53 59
DIVASG (262) 54 60
MODASG (263) 55 61
ADDASGO (264) 62 64
MINASGO (265) 63 65
DOT (266)
REF (267) 23 24 82
POI (268)
NOT (269) 79
ADD (270) 66 80
MIN (271) 67 81
MUL (272) 68
DIV (273) 69
MOD (274) 70
EQU (275) 78
GT (276) 73
LT (277) 75
GTQ (278) 74
LTQ (279) 76
NEQ (280) 77
AND (281) 71
OR (282) 72
LBRACE (283) 14 15 16 17 18 19 38 39 42 43 44 83
RBRACE (284) 14 15 16 17 18 19 38 39 42 43 44 83
LPAREN (285) 14 38 39 42 43 44
RPAREN (286) 14 38 39 42 43 44
ID (287) 15 19 23 24 25 26 27 28 29 30 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 65 84
INTEGER (288) 85
MAIN (289) 14
DEC (290)
OCT (291)
HEX (292)
CHAR (293) 86
BOOL (294)
STRING (295) 16 17 18 87
T_BOOL (296) 33
T_INT (297) 34
T_CHAR (298) 35
T_STRING (299) 36
T_VOID (300) 37
CONST (301) 32
STRUCT (302)
IF (303) 42 43 44
ELSE (304) 42 44
WHILE (305) 39
FOR (306) 38
RETURN (307) 47 48
CONTINUE (308) 46
BREAK (309) 45
PRINTF (310) 17 18
SCANF (311) 16
SEMICOLON (312) 4 5 6 7 11 12 40 41
COMMA (313) 20 23 24 25 26 27 28


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
statements (61)
    on left: 2 3, on right: 1 3 14 38 39 42 43 44
statement (62)
    on left: 4 5 6 7 8 9 10, on right: 2 3
function (63)
    on left: 11 12 13, on right: 10
functionDefi (64)
    on left: 14, on right: 13
functionDecl (65)
    on left: 15, on right: 11
functionCall (66)
    on left: 16 17 18 19, on right: 12
paramList (67)
    on left: 20 21 22, on right: 19 20
scanfIdlist (68)
    on left: 23 24, on right: 16 23
printfIdlist (69)
    on left: 25 26, on right: 18 25
idlist (70)
    on left: 27 28 29 30, on right: 27 28 31 32
declaration (71)
    on left: 31 32, on right: 5 40
type (72)
    on left: 33 34 35 36 37, on right: 14 15 31 32
loop (73)
    on left: 38 39, on right: 8
forcon (74)
    on left: 40 41, on right: 38
control (75)
    on left: 42 43 44, on right: 9 42
jump (76)
    on left: 45 46 47 48, on right: 7
assignment (77)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65, on right:
    6 40 41 50 51 52 53 54 55
expr (78)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84 85 86 87, on right: 20 21 27 29 39 40 41 42 43 44 47 56 57 58
    59 60 61 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83


State 0

    0 $accept: . program $end

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    program       go to state 19
    statements    go to state 20
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 1

   62 assignment: ADDASGO . ID

    ID  shift, and go to state 32


State 2

   63 assignment: MINASGO . ID

    ID  shift, and go to state 33


State 3

   19 functionCall: ID . LBRACE paramList RBRACE
   50 assignment: ID . ASG assignment
   51           | ID . ADDASG assignment
   52           | ID . MINASG assignment
   53           | ID . MULASG assignment
   54           | ID . DIVASG assignment
   55           | ID . MODASG assignment
   56           | ID . ASG expr
   57           | ID . ADDASG expr
   58           | ID . MINASG expr
   59           | ID . MULASG expr
   60           | ID . DIVASG expr
   61           | ID . MODASG expr
   64           | ID . ADDASGO
   65           | ID . MINASGO

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41
    LBRACE   shift, and go to state 42


State 4

   33 type: T_BOOL .

    $default  reduce using rule 33 (type)


State 5

   34 type: T_INT .

    $default  reduce using rule 34 (type)


State 6

   35 type: T_CHAR .

    $default  reduce using rule 35 (type)


State 7

   36 type: T_STRING .

    $default  reduce using rule 36 (type)


State 8

   37 type: T_VOID .

    $default  reduce using rule 37 (type)


State 9

   32 declaration: CONST . type idlist

    T_BOOL    shift, and go to state 4
    T_INT     shift, and go to state 5
    T_CHAR    shift, and go to state 6
    T_STRING  shift, and go to state 7
    T_VOID    shift, and go to state 8

    type  go to state 43


State 10

   42 control: IF . LBRACE expr RBRACE LPAREN statements RPAREN ELSE control
   43        | IF . LBRACE expr RBRACE LPAREN statements RPAREN
   44        | IF . LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LBRACE  shift, and go to state 44


State 11

   39 loop: WHILE . LBRACE expr RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 45


State 12

   38 loop: FOR . LBRACE forcon RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 46


State 13

   47 jump: RETURN . expr
   48     | RETURN .

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 48 (jump)

    expr  go to state 56


State 14

   46 jump: CONTINUE .

    $default  reduce using rule 46 (jump)


State 15

   45 jump: BREAK .

    $default  reduce using rule 45 (jump)


State 16

   17 functionCall: PRINTF . LBRACE STRING RBRACE
   18             | PRINTF . LBRACE STRING printfIdlist RBRACE

    LBRACE  shift, and go to state 57


State 17

   16 functionCall: SCANF . LBRACE STRING scanfIdlist RBRACE

    LBRACE  shift, and go to state 58


State 18

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 19

    0 $accept: program . $end

    $end  shift, and go to state 59


State 20

    1 program: statements .
    3 statements: statements . statement

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]
    $default   reduce using rule 1 (program)

    statement     go to state 60
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

   10 statement: function .

    $default  reduce using rule 10 (statement)


State 23

   13 function: functionDefi .

    $default  reduce using rule 13 (function)


State 24

   11 function: functionDecl . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 25

   12 function: functionCall . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 26

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 27

   14 functionDefi: type . MAIN LBRACE RBRACE LPAREN statements RPAREN
   15 functionDecl: type . ID LBRACE RBRACE
   31 declaration: type . idlist

    ID    shift, and go to state 64
    MAIN  shift, and go to state 65

    idlist  go to state 66


State 28

    8 statement: loop .

    $default  reduce using rule 8 (statement)


State 29

    9 statement: control .

    $default  reduce using rule 9 (statement)


State 30

    7 statement: jump . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 31

    6 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 32

   62 assignment: ADDASGO ID .

    $default  reduce using rule 62 (assignment)


State 33

   63 assignment: MINASGO ID .

    $default  reduce using rule 63 (assignment)


State 34

   50 assignment: ID ASG . assignment
   56           | ID ASG . expr

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 69
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 49 (assignment)

    assignment  go to state 70
    expr        go to state 71


State 35

   51 assignment: ID ADDASG . assignment
   57           | ID ADDASG . expr

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 69
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 49 (assignment)

    assignment  go to state 72
    expr        go to state 73


State 36

   52 assignment: ID MINASG . assignment
   58           | ID MINASG . expr

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 69
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 49 (assignment)

    assignment  go to state 74
    expr        go to state 75


State 37

   53 assignment: ID MULASG . assignment
   59           | ID MULASG . expr

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 69
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 49 (assignment)

    assignment  go to state 76
    expr        go to state 77


State 38

   54 assignment: ID DIVASG . assignment
   60           | ID DIVASG . expr

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 69
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 49 (assignment)

    assignment  go to state 78
    expr        go to state 79


State 39

   55 assignment: ID MODASG . assignment
   61           | ID MODASG . expr

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 69
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 49 (assignment)

    assignment  go to state 80
    expr        go to state 81


State 40

   64 assignment: ID ADDASGO .

    $default  reduce using rule 64 (assignment)


State 41

   65 assignment: ID MINASGO .

    $default  reduce using rule 65 (assignment)


State 42

   19 functionCall: ID LBRACE . paramList RBRACE

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    $default  reduce using rule 22 (paramList)

    paramList  go to state 82
    expr       go to state 83


State 43

   32 declaration: CONST type . idlist

    ID  shift, and go to state 84

    idlist  go to state 85


State 44

   42 control: IF LBRACE . expr RBRACE LPAREN statements RPAREN ELSE control
   43        | IF LBRACE . expr RBRACE LPAREN statements RPAREN
   44        | IF LBRACE . expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 86


State 45

   39 loop: WHILE LBRACE . expr RBRACE LPAREN statements RPAREN

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 87


State 46

   38 loop: FOR LBRACE . forcon RBRACE LPAREN statements RPAREN

    ADDASGO   shift, and go to state 1
    MINASGO   shift, and go to state 2
    ID        shift, and go to state 88
    T_BOOL    shift, and go to state 4
    T_INT     shift, and go to state 5
    T_CHAR    shift, and go to state 6
    T_STRING  shift, and go to state 7
    T_VOID    shift, and go to state 8
    CONST     shift, and go to state 9

    $default  reduce using rule 49 (assignment)

    declaration  go to state 89
    type         go to state 90
    forcon       go to state 91
    assignment   go to state 92


State 47

   82 expr: REF . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 93


State 48

   79 expr: NOT . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 94


State 49

   80 expr: ADD . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 95


State 50

   81 expr: MIN . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 96


State 51

   83 expr: LBRACE . expr RBRACE

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 97


State 52

   84 expr: ID .

    $default  reduce using rule 84 (expr)


State 53

   85 expr: INTEGER .

    $default  reduce using rule 85 (expr)


State 54

   86 expr: CHAR .

    $default  reduce using rule 86 (expr)


State 55

   87 expr: STRING .

    $default  reduce using rule 87 (expr)


State 56

   47 jump: RETURN expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 47 (jump)


State 57

   17 functionCall: PRINTF LBRACE . STRING RBRACE
   18             | PRINTF LBRACE . STRING printfIdlist RBRACE

    STRING  shift, and go to state 111


State 58

   16 functionCall: SCANF LBRACE . STRING scanfIdlist RBRACE

    STRING  shift, and go to state 112


State 59

    0 $accept: program $end .

    $default  accept


State 60

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 61

   11 function: functionDecl SEMICOLON .

    $default  reduce using rule 11 (function)


State 62

   12 function: functionCall SEMICOLON .

    $default  reduce using rule 12 (function)


State 63

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 64

   15 functionDecl: type ID . LBRACE RBRACE
   29 idlist: ID . ASG expr
   30       | ID .

    ASG     shift, and go to state 113
    LBRACE  shift, and go to state 114

    $default  reduce using rule 30 (idlist)


State 65

   14 functionDefi: type MAIN . LBRACE RBRACE LPAREN statements RPAREN

    LBRACE  shift, and go to state 115


State 66

   27 idlist: idlist . COMMA ID ASG expr
   28       | idlist . COMMA ID
   31 declaration: type idlist .

    COMMA  shift, and go to state 116

    $default  reduce using rule 31 (declaration)


State 67

    7 statement: jump SEMICOLON .

    $default  reduce using rule 7 (statement)


State 68

    6 statement: assignment SEMICOLON .

    $default  reduce using rule 6 (statement)


State 69

   50 assignment: ID . ASG assignment
   51           | ID . ADDASG assignment
   52           | ID . MINASG assignment
   53           | ID . MULASG assignment
   54           | ID . DIVASG assignment
   55           | ID . MODASG assignment
   56           | ID . ASG expr
   57           | ID . ADDASG expr
   58           | ID . MINASG expr
   59           | ID . MULASG expr
   60           | ID . DIVASG expr
   61           | ID . MODASG expr
   64           | ID . ADDASGO
   65           | ID . MINASGO
   84 expr: ID .

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41

    $default  reduce using rule 84 (expr)


State 70

   50 assignment: ID ASG assignment .

    $default  reduce using rule 50 (assignment)


State 71

   56 assignment: ID ASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 56 (assignment)


State 72

   51 assignment: ID ADDASG assignment .

    $default  reduce using rule 51 (assignment)


State 73

   57 assignment: ID ADDASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 57 (assignment)


State 74

   52 assignment: ID MINASG assignment .

    $default  reduce using rule 52 (assignment)


State 75

   58 assignment: ID MINASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 58 (assignment)


State 76

   53 assignment: ID MULASG assignment .

    $default  reduce using rule 53 (assignment)


State 77

   59 assignment: ID MULASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 59 (assignment)


State 78

   54 assignment: ID DIVASG assignment .

    $default  reduce using rule 54 (assignment)


State 79

   60 assignment: ID DIVASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 60 (assignment)


State 80

   55 assignment: ID MODASG assignment .

    $default  reduce using rule 55 (assignment)


State 81

   61 assignment: ID MODASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 61 (assignment)


State 82

   19 functionCall: ID LBRACE paramList . RBRACE
   20 paramList: paramList . COMMA expr

    RBRACE  shift, and go to state 117
    COMMA   shift, and go to state 118


State 83

   21 paramList: expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 21 (paramList)


State 84

   29 idlist: ID . ASG expr
   30       | ID .

    ASG  shift, and go to state 113

    $default  reduce using rule 30 (idlist)


State 85

   27 idlist: idlist . COMMA ID ASG expr
   28       | idlist . COMMA ID
   32 declaration: CONST type idlist .

    COMMA  shift, and go to state 116

    $default  reduce using rule 32 (declaration)


State 86

   42 control: IF LBRACE expr . RBRACE LPAREN statements RPAREN ELSE control
   43        | IF LBRACE expr . RBRACE LPAREN statements RPAREN
   44        | IF LBRACE expr . RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD     shift, and go to state 98
    MIN     shift, and go to state 99
    MUL     shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    EQU     shift, and go to state 103
    GT      shift, and go to state 104
    LT      shift, and go to state 105
    GTQ     shift, and go to state 106
    LTQ     shift, and go to state 107
    NEQ     shift, and go to state 108
    AND     shift, and go to state 109
    OR      shift, and go to state 110
    RBRACE  shift, and go to state 119


State 87

   39 loop: WHILE LBRACE expr . RBRACE LPAREN statements RPAREN
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD     shift, and go to state 98
    MIN     shift, and go to state 99
    MUL     shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    EQU     shift, and go to state 103
    GT      shift, and go to state 104
    LT      shift, and go to state 105
    GTQ     shift, and go to state 106
    LTQ     shift, and go to state 107
    NEQ     shift, and go to state 108
    AND     shift, and go to state 109
    OR      shift, and go to state 110
    RBRACE  shift, and go to state 120


State 88

   50 assignment: ID . ASG assignment
   51           | ID . ADDASG assignment
   52           | ID . MINASG assignment
   53           | ID . MULASG assignment
   54           | ID . DIVASG assignment
   55           | ID . MODASG assignment
   56           | ID . ASG expr
   57           | ID . ADDASG expr
   58           | ID . MINASG expr
   59           | ID . MULASG expr
   60           | ID . DIVASG expr
   61           | ID . MODASG expr
   64           | ID . ADDASGO
   65           | ID . MINASGO

    ASG      shift, and go to state 34
    ADDASG   shift, and go to state 35
    MINASG   shift, and go to state 36
    MULASG   shift, and go to state 37
    DIVASG   shift, and go to state 38
    MODASG   shift, and go to state 39
    ADDASGO  shift, and go to state 40
    MINASGO  shift, and go to state 41


State 89

   40 forcon: declaration . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 121


State 90

   31 declaration: type . idlist

    ID  shift, and go to state 84

    idlist  go to state 66


State 91

   38 loop: FOR LBRACE forcon . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 122


State 92

   41 forcon: assignment . SEMICOLON expr SEMICOLON assignment

    SEMICOLON  shift, and go to state 123


State 93

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr
   82     | REF expr .

    $default  reduce using rule 82 (expr)


State 94

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr
   79     | NOT expr .

    $default  reduce using rule 79 (expr)


State 95

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr
   80     | ADD expr .

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 80 (expr)


State 96

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr
   81     | MIN expr .

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 81 (expr)


State 97

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr
   83     | LBRACE expr . RBRACE

    ADD     shift, and go to state 98
    MIN     shift, and go to state 99
    MUL     shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    EQU     shift, and go to state 103
    GT      shift, and go to state 104
    LT      shift, and go to state 105
    GTQ     shift, and go to state 106
    LTQ     shift, and go to state 107
    NEQ     shift, and go to state 108
    AND     shift, and go to state 109
    OR      shift, and go to state 110
    RBRACE  shift, and go to state 124


State 98

   66 expr: expr ADD . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 125


State 99

   67 expr: expr MIN . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 126


State 100

   68 expr: expr MUL . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 127


State 101

   69 expr: expr DIV . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 128


State 102

   70 expr: expr MOD . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 129


State 103

   78 expr: expr EQU . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 130


State 104

   73 expr: expr GT . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 131


State 105

   75 expr: expr LT . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 132


State 106

   74 expr: expr GTQ . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 133


State 107

   76 expr: expr LTQ . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 134


State 108

   77 expr: expr NEQ . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 135


State 109

   71 expr: expr AND . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 136


State 110

   72 expr: expr OR . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 137


State 111

   17 functionCall: PRINTF LBRACE STRING . RBRACE
   18             | PRINTF LBRACE STRING . printfIdlist RBRACE

    RBRACE  shift, and go to state 138
    COMMA   shift, and go to state 139

    printfIdlist  go to state 140


State 112

   16 functionCall: SCANF LBRACE STRING . scanfIdlist RBRACE

    COMMA  shift, and go to state 141

    scanfIdlist  go to state 142


State 113

   29 idlist: ID ASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 143


State 114

   15 functionDecl: type ID LBRACE . RBRACE

    RBRACE  shift, and go to state 144


State 115

   14 functionDefi: type MAIN LBRACE . RBRACE LPAREN statements RPAREN

    RBRACE  shift, and go to state 145


State 116

   27 idlist: idlist COMMA . ID ASG expr
   28       | idlist COMMA . ID

    ID  shift, and go to state 146


State 117

   19 functionCall: ID LBRACE paramList RBRACE .

    $default  reduce using rule 19 (functionCall)


State 118

   20 paramList: paramList COMMA . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 147


State 119

   42 control: IF LBRACE expr RBRACE . LPAREN statements RPAREN ELSE control
   43        | IF LBRACE expr RBRACE . LPAREN statements RPAREN
   44        | IF LBRACE expr RBRACE . LPAREN statements RPAREN ELSE LPAREN statements RPAREN

    LPAREN  shift, and go to state 148


State 120

   39 loop: WHILE LBRACE expr RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 149


State 121

   40 forcon: declaration SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 150


State 122

   38 loop: FOR LBRACE forcon RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 151


State 123

   41 forcon: assignment SEMICOLON . expr SEMICOLON assignment

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 152


State 124

   83 expr: LBRACE expr RBRACE .

    $default  reduce using rule 83 (expr)


State 125

   66 expr: expr . ADD expr
   66     | expr ADD expr .
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 66 (expr)


State 126

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   67     | expr MIN expr .
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 67 (expr)


State 127

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   68     | expr MUL expr .
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    $default  reduce using rule 68 (expr)


State 128

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   69     | expr DIV expr .
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    $default  reduce using rule 69 (expr)


State 129

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   70     | expr MOD expr .
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    $default  reduce using rule 70 (expr)


State 130

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr
   78     | expr EQU expr .

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 78 (expr)


State 131

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   73     | expr GT expr .
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 73 (expr)


State 132

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   75     | expr LT expr .
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 75 (expr)


State 133

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   74     | expr GTQ expr .
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 74 (expr)


State 134

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   76     | expr LTQ expr .
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 76 (expr)


State 135

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   77     | expr NEQ expr .
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 77 (expr)


State 136

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   71     | expr AND expr .
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108

    $default  reduce using rule 71 (expr)


State 137

   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   72     | expr OR expr .
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109

    $default  reduce using rule 72 (expr)


State 138

   17 functionCall: PRINTF LBRACE STRING RBRACE .

    $default  reduce using rule 17 (functionCall)


State 139

   26 printfIdlist: COMMA . ID

    ID  shift, and go to state 153


State 140

   18 functionCall: PRINTF LBRACE STRING printfIdlist . RBRACE
   25 printfIdlist: printfIdlist . COMMA ID

    RBRACE  shift, and go to state 154
    COMMA   shift, and go to state 155


State 141

   24 scanfIdlist: COMMA . REF ID

    REF  shift, and go to state 156


State 142

   16 functionCall: SCANF LBRACE STRING scanfIdlist . RBRACE
   23 scanfIdlist: scanfIdlist . COMMA REF ID

    RBRACE  shift, and go to state 157
    COMMA   shift, and go to state 158


State 143

   29 idlist: ID ASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 29 (idlist)


State 144

   15 functionDecl: type ID LBRACE RBRACE .

    $default  reduce using rule 15 (functionDecl)


State 145

   14 functionDefi: type MAIN LBRACE RBRACE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 159


State 146

   27 idlist: idlist COMMA ID . ASG expr
   28       | idlist COMMA ID .

    ASG  shift, and go to state 160

    $default  reduce using rule 28 (idlist)


State 147

   20 paramList: paramList COMMA expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 20 (paramList)


State 148

   42 control: IF LBRACE expr RBRACE LPAREN . statements RPAREN ELSE control
   43        | IF LBRACE expr RBRACE LPAREN . statements RPAREN
   44        | IF LBRACE expr RBRACE LPAREN . statements RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statements    go to state 161
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 149

   39 loop: WHILE LBRACE expr RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statements    go to state 162
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 150

   40 forcon: declaration SEMICOLON expr . SEMICOLON assignment
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD        shift, and go to state 98
    MIN        shift, and go to state 99
    MUL        shift, and go to state 100
    DIV        shift, and go to state 101
    MOD        shift, and go to state 102
    EQU        shift, and go to state 103
    GT         shift, and go to state 104
    LT         shift, and go to state 105
    GTQ        shift, and go to state 106
    LTQ        shift, and go to state 107
    NEQ        shift, and go to state 108
    AND        shift, and go to state 109
    OR         shift, and go to state 110
    SEMICOLON  shift, and go to state 163


State 151

   38 loop: FOR LBRACE forcon RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statements    go to state 164
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 152

   41 forcon: assignment SEMICOLON expr . SEMICOLON assignment
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD        shift, and go to state 98
    MIN        shift, and go to state 99
    MUL        shift, and go to state 100
    DIV        shift, and go to state 101
    MOD        shift, and go to state 102
    EQU        shift, and go to state 103
    GT         shift, and go to state 104
    LT         shift, and go to state 105
    GTQ        shift, and go to state 106
    LTQ        shift, and go to state 107
    NEQ        shift, and go to state 108
    AND        shift, and go to state 109
    OR         shift, and go to state 110
    SEMICOLON  shift, and go to state 165


State 153

   26 printfIdlist: COMMA ID .

    $default  reduce using rule 26 (printfIdlist)


State 154

   18 functionCall: PRINTF LBRACE STRING printfIdlist RBRACE .

    $default  reduce using rule 18 (functionCall)


State 155

   25 printfIdlist: printfIdlist COMMA . ID

    ID  shift, and go to state 166


State 156

   24 scanfIdlist: COMMA REF . ID

    ID  shift, and go to state 167


State 157

   16 functionCall: SCANF LBRACE STRING scanfIdlist RBRACE .

    $default  reduce using rule 16 (functionCall)


State 158

   23 scanfIdlist: scanfIdlist COMMA . REF ID

    REF  shift, and go to state 168


State 159

   14 functionDefi: type MAIN LBRACE RBRACE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statements    go to state 169
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 160

   27 idlist: idlist COMMA ID ASG . expr

    REF      shift, and go to state 47
    NOT      shift, and go to state 48
    ADD      shift, and go to state 49
    MIN      shift, and go to state 50
    LBRACE   shift, and go to state 51
    ID       shift, and go to state 52
    INTEGER  shift, and go to state 53
    CHAR     shift, and go to state 54
    STRING   shift, and go to state 55

    expr  go to state 170


State 161

    3 statements: statements . statement
   42 control: IF LBRACE expr RBRACE LPAREN statements . RPAREN ELSE control
   43        | IF LBRACE expr RBRACE LPAREN statements . RPAREN
   44        | IF LBRACE expr RBRACE LPAREN statements . RPAREN ELSE LPAREN statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 171
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statement     go to state 60
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 162

    3 statements: statements . statement
   39 loop: WHILE LBRACE expr RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 172
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statement     go to state 60
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 163

   40 forcon: declaration SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 88

    $default  reduce using rule 49 (assignment)

    assignment  go to state 173


State 164

    3 statements: statements . statement
   38 loop: FOR LBRACE forcon RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 174
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statement     go to state 60
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 165

   41 forcon: assignment SEMICOLON expr SEMICOLON . assignment

    ADDASGO  shift, and go to state 1
    MINASGO  shift, and go to state 2
    ID       shift, and go to state 88

    $default  reduce using rule 49 (assignment)

    assignment  go to state 175


State 166

   25 printfIdlist: printfIdlist COMMA ID .

    $default  reduce using rule 25 (printfIdlist)


State 167

   24 scanfIdlist: COMMA REF ID .

    $default  reduce using rule 24 (scanfIdlist)


State 168

   23 scanfIdlist: scanfIdlist COMMA REF . ID

    ID  shift, and go to state 176


State 169

    3 statements: statements . statement
   14 functionDefi: type MAIN LBRACE RBRACE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 177
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statement     go to state 60
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 170

   27 idlist: idlist COMMA ID ASG expr .
   66 expr: expr . ADD expr
   67     | expr . MIN expr
   68     | expr . MUL expr
   69     | expr . DIV expr
   70     | expr . MOD expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . GT expr
   74     | expr . GTQ expr
   75     | expr . LT expr
   76     | expr . LTQ expr
   77     | expr . NEQ expr
   78     | expr . EQU expr

    ADD  shift, and go to state 98
    MIN  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102
    EQU  shift, and go to state 103
    GT   shift, and go to state 104
    LT   shift, and go to state 105
    GTQ  shift, and go to state 106
    LTQ  shift, and go to state 107
    NEQ  shift, and go to state 108
    AND  shift, and go to state 109
    OR   shift, and go to state 110

    $default  reduce using rule 27 (idlist)


State 171

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN . ELSE control
   43        | IF LBRACE expr RBRACE LPAREN statements RPAREN .
   44        | IF LBRACE expr RBRACE LPAREN statements RPAREN . ELSE LPAREN statements RPAREN

    ELSE  shift, and go to state 178

    $default  reduce using rule 43 (control)


State 172

   39 loop: WHILE LBRACE expr RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 39 (loop)


State 173

   40 forcon: declaration SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 40 (forcon)


State 174

   38 loop: FOR LBRACE forcon RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 38 (loop)


State 175

   41 forcon: assignment SEMICOLON expr SEMICOLON assignment .

    $default  reduce using rule 41 (forcon)


State 176

   23 scanfIdlist: scanfIdlist COMMA REF ID .

    $default  reduce using rule 23 (scanfIdlist)


State 177

   14 functionDefi: type MAIN LBRACE RBRACE LPAREN statements RPAREN .

    $default  reduce using rule 14 (functionDefi)


State 178

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE . control
   44        | IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE . LPAREN statements RPAREN

    LPAREN  shift, and go to state 179
    IF      shift, and go to state 10

    control  go to state 180


State 179

   44 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN . statements RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statements    go to state 181
    statement     go to state 21
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 180

   42 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE control .

    $default  reduce using rule 42 (control)


State 181

    3 statements: statements . statement
   44 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements . RPAREN

    ADDASGO    shift, and go to state 1
    MINASGO    shift, and go to state 2
    RPAREN     shift, and go to state 182
    ID         shift, and go to state 3
    T_BOOL     shift, and go to state 4
    T_INT      shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_STRING   shift, and go to state 7
    T_VOID     shift, and go to state 8
    CONST      shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 13
    CONTINUE   shift, and go to state 14
    BREAK      shift, and go to state 15
    PRINTF     shift, and go to state 16
    SCANF      shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    SEMICOLON  [reduce using rule 49 (assignment)]

    statement     go to state 60
    function      go to state 22
    functionDefi  go to state 23
    functionDecl  go to state 24
    functionCall  go to state 25
    declaration   go to state 26
    type          go to state 27
    loop          go to state 28
    control       go to state 29
    jump          go to state 30
    assignment    go to state 31


State 182

   44 control: IF LBRACE expr RBRACE LPAREN statements RPAREN ELSE LPAREN statements RPAREN .

    $default  reduce using rule 44 (control)
