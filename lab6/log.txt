main.l:216: warning, rule cannot be matched
main.y: warning: 12 shift/reduce conflicts [-Wconflicts-sr]
main.l: In function ‘void createIntNode(int, RadixType)’:
main.l:49:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
             for (int i = 1; i < strlen(yytext); i++) {
                             ~~^~~~~~~~~~~~~~~~
main.l:58:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
             for (int i = 2; i < strlen(yytext); i++) {
                             ~~^~~~~~~~~~~~~~~~
main.y: In function ‘bool checkWhile(TreeNode*, TreeNode*)’:
main.y:650:27: warning: unused parameter ‘t1’ [-Wunused-parameter]
 bool checkWhile(TreeNode* t1, TreeNode* t2)
                           ^~
main.y: In function ‘bool checkIf(TreeNode*, TreeNode*, TreeNode*)’:
main.y:660:24: warning: unused parameter ‘t1’ [-Wunused-parameter]
 bool checkIf(TreeNode* t1, TreeNode* t2, TreeNode* t3)
                        ^~
main.y: In function ‘bool checkAsg(TreeNode*, bool)’:
main.y:675:34: warning: unused parameter ‘i’ [-Wunused-parameter]
 bool checkAsg(TreeNode* t1, bool i)
                                  ^
./parseTree.cpp: In member function ‘bool TreeNode::typeCheck()’:
./parseTree.cpp:607:47: warning: enum constant in boolean context [-Wint-in-bool-context]
                 if (this->opType == OP_AND || OP_OR){
                                               ^~~~~
./parseTree.cpp:728:30: warning: unused variable ‘tType’ [-Wunused-variable]
                     DeclType tType = this->child->getSibling()->getDeclType();
                              ^~~~~
./parseTree.cpp: In static member function ‘static std::__cxx11::string TreeNode::operatorType2String(OperatorType)’:
./parseTree.cpp:416:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
./parseTree.cpp: In member function ‘bool TreeNode::typeCheck()’:
./parseTree.cpp:711:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
                     }
                     ^
./parseTree.cpp:714:17: note: here
                 case STMT_IF:{
                 ^~~~
./parseTree.cpp:739:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
                     }
                     ^
./parseTree.cpp:742:17: note: here
                 case STMT_WHILE:{
                 ^~~~
./parseTree.cpp:769:13: warning: this statement may fall through [-Wimplicit-fallthrough=]
             if(this->getFunctionType() == FUNC_CALL){
             ^~
./parseTree.cpp:772:9: note: here
         default: {
         ^~~~~~~
./parseTree.cpp:777:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
